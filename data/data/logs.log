"C:\Program Files\Java\jdk-18.0.1.1\bin\java.exe" -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:63893,suspend=y,server=n -javaagent:C:\Users\lenovo\AppData\Local\JetBrains\IdeaIC2025.1\captureAgent\debugger-agent.jar=file:///C:/Users/lenovo/AppData/Local/Temp/capture3453731305830676747.props -Dspring-boot.run.profiles=local -Dkotlinx.coroutines.debug.enable.creation.stack.trace=false -Ddebugger.agent.enable.coroutines=true -Dkotlinx.coroutines.debug.enable.flows.stack.trace=true -Dkotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath "C:\Users\lenovo\Downloads\project work\data\data\target\classes;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.1\spring-boot-starter-data-jpa-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.1\spring-boot-starter-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot\3.4.1\spring-boot-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.1\spring-boot-autoconfigure-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.1\spring-boot-starter-logging-3.4.1.jar;C:\Users\lenovo\.m2\repository\ch\qos\logback\logback-classic\1.5.12\logback-classic-1.5.12.jar;C:\Users\lenovo\.m2\repository\ch\qos\logback\logback-core\1.5.12\logback-core-1.5.12.jar;C:\Users\lenovo\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\lenovo\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\lenovo\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\lenovo\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\lenovo\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.1\spring-boot-starter-jdbc-3.4.1.jar;C:\Users\lenovo\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-jdbc\6.2.1\spring-jdbc-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\lenovo\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\lenovo\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\lenovo\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\lenovo\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\lenovo\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\lenovo\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\lenovo\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\lenovo\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\lenovo\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\lenovo\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\lenovo\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\lenovo\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\lenovo\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\lenovo\.m2\repository\org\springframework\data\spring-data-jpa\3.4.1\spring-data-jpa-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\data\spring-data-commons\3.4.1\spring-data-commons-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-orm\6.2.1\spring-orm-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-context\6.2.1\spring-context-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-tx\6.2.1\spring-tx-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-beans\6.2.1\spring-beans-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-aspects\6.2.1\spring-aspects-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.1\spring-boot-starter-web-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.1\spring-boot-starter-json-3.4.1.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.2\jackson-datatype-jdk8-2.18.2.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.2\jackson-datatype-jsr310-2.18.2.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.2\jackson-module-parameter-names-2.18.2.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.1\spring-boot-starter-tomcat-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.34\tomcat-embed-core-10.1.34.jar;C:\Users\lenovo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.34\tomcat-embed-websocket-10.1.34.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-web\6.2.1\spring-web-6.2.1.jar;C:\Users\lenovo\.m2\repository\io\micrometer\micrometer-observation\1.14.2\micrometer-observation-1.14.2.jar;C:\Users\lenovo\.m2\repository\io\micrometer\micrometer-commons\1.14.2\micrometer-commons-1.14.2.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-webmvc\6.2.1\spring-webmvc-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-expression\6.2.1\spring-expression-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\lenovo\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\lenovo\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-core\6.2.1\spring-core-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-jcl\6.2.1\spring-jcl-6.2.1.jar;C:\Users\lenovo\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.1\spring-boot-starter-validation-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.34\tomcat-embed-el-10.1.34.jar;C:\Users\lenovo\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\lenovo\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\lenovo\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar;C:\Users\lenovo\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.4.0\springdoc-openapi-starter-webmvc-ui-2.4.0.jar;C:\Users\lenovo\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.4.0\springdoc-openapi-starter-webmvc-api-2.4.0.jar;C:\Users\lenovo\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.4.0\springdoc-openapi-starter-common-2.4.0.jar;C:\Users\lenovo\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.20\swagger-core-jakarta-2.2.20.jar;C:\Users\lenovo\.m2\repository\org\apache\commons\commons-lang3\3.17.0\commons-lang3-3.17.0.jar;C:\Users\lenovo\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.20\swagger-annotations-jakarta-2.2.20.jar;C:\Users\lenovo\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.20\swagger-models-jakarta-2.2.20.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.18.2\jackson-dataformat-yaml-2.18.2.jar;C:\Users\lenovo\.m2\repository\org\webjars\swagger-ui\5.11.8\swagger-ui-5.11.8.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.1\spring-boot-starter-security-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-aop\6.2.1\spring-aop-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\security\spring-security-config\6.4.2\spring-security-config-6.4.2.jar;C:\Users\lenovo\.m2\repository\org\springframework\security\spring-security-core\6.4.2\spring-security-core-6.4.2.jar;C:\Users\lenovo\.m2\repository\org\springframework\security\spring-security-web\6.4.2\spring-security-web-6.4.2.jar;C:\Users\lenovo\.m2\repository\org\springframework\security\spring-security-crypto\6.4.2\spring-security-crypto-6.4.2.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.1.1\lib\idea_rt.jar" com.data.CarSellApplication
Connected to the target VM, address: '127.0.0.1:63893', transport: 'socket'

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-27 22:59:17 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-27 22:59:17 - Trying to load META-INF/validation.xml via TCCL
2025-05-27 22:59:17 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-27 22:59:17 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-27 22:59:17 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-27 22:59:17 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-27 22:59:17 - Loaded expression factory via original TCCL
2025-05-27 22:59:17 - Starting CarSellApplication using Java 18.0.1.1 with PID 7704 (C:\Users\lenovo\Downloads\project work\data\data\target\classes started by lenovo in C:\Users\lenovo\Downloads\project work\data\data)
2025-05-27 22:59:17 - The following 1 profile is active: "prod"
2025-05-27 22:59:17 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-27 22:59:17 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-27 22:59:17 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-27 22:59:17 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-27 22:59:17 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-27 22:59:17 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-27 22:59:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-27 22:59:20 - Finished Spring Data repository scanning in 339 ms. Found 18 JPA repository interfaces.
2025-05-27 22:59:22 - Tomcat initialized with port 8181 (http)
2025-05-27 22:59:22 - Starting service [Tomcat]
2025-05-27 22:59:22 - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-05-27 22:59:23 - Initializing Spring embedded WebApplicationContext
2025-05-27 22:59:23 - Root WebApplicationContext: initialization completed in 5609 ms
2025-05-27 22:59:23 - HikariPool-1 - Starting...
2025-05-27 22:59:24 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@389a5022
2025-05-27 22:59:24 - HikariPool-1 - Start completed.
2025-05-27 22:59:24 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@4d7e1886
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/lenovo/Downloads/project%20work/data/data/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.data.entity.AdminEntity
		com.data.entity.Appointment
		com.data.entity.CarAddressEntity
		com.data.entity.CarEntity
		com.data.entity.CarFeaturesEntity
		com.data.entity.CarMediaEntity
		com.data.entity.CarSpecificationsEntity
		com.data.entity.CommissionEntity
		com.data.entity.ContactEntity
		com.data.entity.MakeOfferEntity
		com.data.entity.PaymentEntity
		com.data.entity.PurchasedCarEntity
		com.data.entity.Role
		com.data.entity.TestDriveEntity
		com.data.entity.UserEntity
		com.data.entity.UserHistoryEntity
		com.data.entity.VendorEntity
		com.data.entity.WishlistEntity]
	Mapping files names []
	Properties []
2025-05-27 22:59:24 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-05-27 22:59:24 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-05-27 22:59:24 - HHH000412: Hibernate ORM core version 6.6.4.Final
2025-05-27 22:59:24 - HHH000206: 'hibernate.properties' not found
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-05-27 22:59:25 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-05-27 22:59:25 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-05-27 22:59:25 - HHH000026: Second-level cache disabled
2025-05-27 22:59:25 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@70139a81
2025-05-27 22:59:25 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@70139a81
2025-05-27 22:59:25 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@70139a81
2025-05-27 22:59:25 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@60f9dc7e
2025-05-27 22:59:25 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@60f9dc7e
2025-05-27 22:59:25 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@15e5246
2025-05-27 22:59:25 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@15e5246
2025-05-27 22:59:25 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@503556cb
2025-05-27 22:59:25 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@503556cb
2025-05-27 22:59:25 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c9e19de
2025-05-27 22:59:25 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3c9e19de
2025-05-27 22:59:25 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3c9e19de
2025-05-27 22:59:25 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@12aa381f
2025-05-27 22:59:25 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@12aa381f
2025-05-27 22:59:25 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@12aa381f
2025-05-27 22:59:25 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6115846e
2025-05-27 22:59:25 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6115846e
2025-05-27 22:59:25 - Adding type registration image -> org.hibernate.type.BasicTypeReference@1bec1589
2025-05-27 22:59:25 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@57f0bfc3
2025-05-27 22:59:25 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@57f0bfc3
2025-05-27 22:59:25 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14590fe2
2025-05-27 22:59:25 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5922cff3
2025-05-27 22:59:25 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2299d903
2025-05-27 22:59:25 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2299d903
2025-05-27 22:59:25 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2299d903
2025-05-27 22:59:25 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@70c56434
2025-05-27 22:59:25 - Adding type registration int -> org.hibernate.type.BasicTypeReference@70c56434
2025-05-27 22:59:25 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@70c56434
2025-05-27 22:59:25 - Adding type registration long -> org.hibernate.type.BasicTypeReference@2c3f43d1
2025-05-27 22:59:25 - Adding type registration long -> org.hibernate.type.BasicTypeReference@2c3f43d1
2025-05-27 22:59:25 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2c3f43d1
2025-05-27 22:59:25 - Adding type registration float -> org.hibernate.type.BasicTypeReference@632d4cf2
2025-05-27 22:59:25 - Adding type registration float -> org.hibernate.type.BasicTypeReference@632d4cf2
2025-05-27 22:59:25 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@632d4cf2
2025-05-27 22:59:25 - Adding type registration double -> org.hibernate.type.BasicTypeReference@f10d055
2025-05-27 22:59:25 - Adding type registration double -> org.hibernate.type.BasicTypeReference@f10d055
2025-05-27 22:59:25 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@f10d055
2025-05-27 22:59:25 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@542ff147
2025-05-27 22:59:25 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@542ff147
2025-05-27 22:59:25 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2d801d8
2025-05-27 22:59:25 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2d801d8
2025-05-27 22:59:25 - Adding type registration character -> org.hibernate.type.BasicTypeReference@b9b97ad
2025-05-27 22:59:25 - Adding type registration char -> org.hibernate.type.BasicTypeReference@b9b97ad
2025-05-27 22:59:25 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@b9b97ad
2025-05-27 22:59:25 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2807cf3
2025-05-27 22:59:25 - Adding type registration string -> org.hibernate.type.BasicTypeReference@298e002d
2025-05-27 22:59:25 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@298e002d
2025-05-27 22:59:25 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6b9a1205
2025-05-27 22:59:25 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3c6bd624
2025-05-27 22:59:25 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3c6bd624
2025-05-27 22:59:25 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3c6bd624
2025-05-27 22:59:25 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3d8d52be
2025-05-27 22:59:25 - Adding type registration text -> org.hibernate.type.BasicTypeReference@645ba24a
2025-05-27 22:59:25 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5f6a8efe
2025-05-27 22:59:25 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3dd2b9c1
2025-05-27 22:59:25 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3dd2b9c1
2025-05-27 22:59:25 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6a1d1467
2025-05-27 22:59:25 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6a1d1467
2025-05-27 22:59:25 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@536da29c
2025-05-27 22:59:25 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@58fbcb71
2025-05-27 22:59:25 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@70cf7d1e
2025-05-27 22:59:25 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@72f3f14c
2025-05-27 22:59:25 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4cb4c4cc
2025-05-27 22:59:25 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4a122e68
2025-05-27 22:59:25 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@41be8db9
2025-05-27 22:59:25 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@41be8db9
2025-05-27 22:59:25 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2c2a7d53
2025-05-27 22:59:25 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2c2a7d53
2025-05-27 22:59:25 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@46524ebe
2025-05-27 22:59:25 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@46524ebe
2025-05-27 22:59:25 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1de85972
2025-05-27 22:59:25 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1de85972
2025-05-27 22:59:25 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@280ecc33
2025-05-27 22:59:25 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@280ecc33
2025-05-27 22:59:25 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57b1ec84
2025-05-27 22:59:25 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c27f72
2025-05-27 22:59:25 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5cbe95b1
2025-05-27 22:59:25 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5cbe95b1
2025-05-27 22:59:25 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@28fa541
2025-05-27 22:59:25 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5a82bc58
2025-05-27 22:59:25 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4aab7195
2025-05-27 22:59:25 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6210666c
2025-05-27 22:59:25 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6210666c
2025-05-27 22:59:25 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1dca62c2
2025-05-27 22:59:25 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52657d5f
2025-05-27 22:59:25 - Adding type registration date -> org.hibernate.type.BasicTypeReference@43d3995f
2025-05-27 22:59:25 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@43d3995f
2025-05-27 22:59:25 - Adding type registration time -> org.hibernate.type.BasicTypeReference@2211b44f
2025-05-27 22:59:25 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2211b44f
2025-05-27 22:59:25 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6c830ebd
2025-05-27 22:59:25 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6c830ebd
2025-05-27 22:59:25 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6c830ebd
2025-05-27 22:59:25 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@15f519f7
2025-05-27 22:59:25 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@15f519f7
2025-05-27 22:59:25 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@15f519f7
2025-05-27 22:59:25 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4a336377
2025-05-27 22:59:25 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11ad095c
2025-05-27 22:59:25 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2c2a903f
2025-05-27 22:59:25 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2c2a903f
2025-05-27 22:59:25 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7d537616
2025-05-27 22:59:25 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7d537616
2025-05-27 22:59:25 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7d537616
2025-05-27 22:59:25 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@604c7e9b
2025-05-27 22:59:25 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@19d27c27
2025-05-27 22:59:25 - Adding type registration class -> org.hibernate.type.BasicTypeReference@6181bc4a
2025-05-27 22:59:25 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6181bc4a
2025-05-27 22:59:25 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@70485aa
2025-05-27 22:59:25 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@70485aa
2025-05-27 22:59:25 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@70485aa
2025-05-27 22:59:25 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4bf8b77
2025-05-27 22:59:25 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4bf8b77
2025-05-27 22:59:25 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@e06ec83
2025-05-27 22:59:25 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@e06ec83
2025-05-27 22:59:25 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@628962e5
2025-05-27 22:59:25 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@628962e5
2025-05-27 22:59:25 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@410382cb
2025-05-27 22:59:25 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@410382cb
2025-05-27 22:59:25 - Adding type registration url -> org.hibernate.type.BasicTypeReference@399f5daf
2025-05-27 22:59:25 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@399f5daf
2025-05-27 22:59:25 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@c4cceb
2025-05-27 22:59:25 - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@29f3185c
2025-05-27 22:59:25 - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@74bbc273
2025-05-27 22:59:25 - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@370a8b6e
2025-05-27 22:59:25 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@118fbaf0
2025-05-27 22:59:25 - Adding type registration object -> org.hibernate.type.JavaObjectType@1c18ee69
2025-05-27 22:59:25 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1c18ee69
2025-05-27 22:59:25 - Adding type registration null -> org.hibernate.type.NullType@3e4afd10
2025-05-27 22:59:25 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@22aefae0
2025-05-27 22:59:25 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@20faaf77
2025-05-27 22:59:25 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7440265c
2025-05-27 22:59:25 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1d8be7b9
2025-05-27 22:59:25 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@48277712
2025-05-27 22:59:25 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3d53e876
2025-05-27 22:59:25 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@48d44b46
2025-05-27 22:59:25 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@aa0dbca
2025-05-27 22:59:25 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4e2109fe] into BootstrapContext; was [null]
2025-05-27 22:59:25 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4e2109fe) [was null]
2025-05-27 22:59:25 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@18bb1b88] into BootstrapContext; was [null]
2025-05-27 22:59:25 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@51b51641] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@362a6aa5]
2025-05-27 22:59:26 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-27 22:59:26 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4e2109fe]
2025-05-27 22:59:26 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4e2109fe]
2025-05-27 22:59:26 - Database ->
	   name : MySQL
	version : 8.0.40
	  major : 8
	  minor : 0
2025-05-27 22:59:26 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-9.1.0 (Revision: cf2917ea44ae2e43a4514a33771035aa99de73bf)
	  major : 9
	  minor : 1
2025-05-27 22:59:26 - JDBC version : 4.2
2025-05-27 22:59:26 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-27 22:59:26 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2025-05-27 22:59:26 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-05-27 22:59:26 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2025-05-27 22:59:26 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-05-27 22:59:26 - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-05-27 22:59:26 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@562f6681) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f6f65a4)
2025-05-27 22:59:26 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@990b86b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3dea1ecc)
2025-05-27 22:59:26 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@105c6c9e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@40a7974)
2025-05-27 22:59:26 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8d5da7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65a4b9d6)
2025-05-27 22:59:26 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@16ef1160) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@41f90b10)
2025-05-27 22:59:26 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67593f7b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2773504f)
2025-05-27 22:59:26 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@497921d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@40d10264)
2025-05-27 22:59:26 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6edd4fe2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53918b5e)
2025-05-27 22:59:26 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5366575d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1b6cad77)
2025-05-27 22:59:26 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-05-27 22:59:26 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-05-27 22:59:26 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-05-27 22:59:26 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-05-27 22:59:26 - Adding type registration null -> org.hibernate.type.NullType@2210e466
2025-05-27 22:59:26 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3e4afd10`
2025-05-27 22:59:26 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-05-27 22:59:26 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-05-27 22:59:26 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-05-27 22:59:26 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-05-27 22:59:26 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-05-27 22:59:26 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-05-27 22:59:26 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-05-27 22:59:26 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-05-27 22:59:26 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-05-27 22:59:26 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-05-27 22:59:26 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-05-27 22:59:26 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-05-27 22:59:26 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e000a17] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@77d959f1]
2025-05-27 22:59:26 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-05-27 22:59:26 - Binding entity from annotated class: com.data.entity.AdminEntity
2025-05-27 22:59:26 - Import with entity name AdminEntity
2025-05-27 22:59:26 - Bind entity com.data.entity.AdminEntity on table admins
2025-05-27 22:59:26 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:26 - Binding column: AnnotatedColumn()
2025-05-27 22:59:26 - Not known whether passed class name [com.data.entity.AdminEntity] is safe
2025-05-27 22:59:26 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.AdminEntity
2025-05-27 22:59:26 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:26 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.AdminEntity:id]
2025-05-27 22:59:26 - building BasicValue for id
2025-05-27 22:59:26 - Skipping column re-registration: admins.id
2025-05-27 22:59:26 - Building property id
2025-05-27 22:59:26 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:26 - Binding column: AnnotatedColumn()
2025-05-27 22:59:26 - MetadataSourceProcessor property active with lazy=false
2025-05-27 22:59:26 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.AdminEntity:active]
2025-05-27 22:59:26 - building BasicValue for active
2025-05-27 22:59:26 - Skipping column re-registration: admins.active
2025-05-27 22:59:26 - Building property active
2025-05-27 22:59:26 - Binding column: AnnotatedJoinColumn(column='user_id')
2025-05-27 22:59:26 - Binding column: AnnotatedColumn()
2025-05-27 22:59:26 - Building property user
2025-05-27 22:59:26 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:26 - Binding entity from annotated class: com.data.entity.Appointment
2025-05-27 22:59:26 - Import with entity name Appointment
2025-05-27 22:59:26 - Bind entity com.data.entity.Appointment on table appointments
2025-05-27 22:59:26 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:26 - Binding column: AnnotatedColumn()
2025-05-27 22:59:26 - Not known whether passed class name [com.data.entity.Appointment] is safe
2025-05-27 22:59:26 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.Appointment
2025-05-27 22:59:26 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:26 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.Appointment:id]
2025-05-27 22:59:26 - building BasicValue for id
2025-05-27 22:59:26 - Skipping column re-registration: appointments.id
2025-05-27 22:59:26 - Building property id
2025-05-27 22:59:26 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:26 - Binding column: AnnotatedColumn()
2025-05-27 22:59:26 - MetadataSourceProcessor property appointmentDate with lazy=false
2025-05-27 22:59:26 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.Appointment:appointmentDate]
2025-05-27 22:59:26 - building BasicValue for appointmentDate
2025-05-27 22:59:26 - Skipping column re-registration: appointments.appointment_date
2025-05-27 22:59:26 - Building property appointmentDate
2025-05-27 22:59:26 - Binding column: AnnotatedColumn()
2025-05-27 22:59:26 - MetadataSourceProcessor property carModel with lazy=false
2025-05-27 22:59:26 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.Appointment:carModel]
2025-05-27 22:59:26 - building BasicValue for carModel
2025-05-27 22:59:26 - Skipping column re-registration: appointments.car_model
2025-05-27 22:59:26 - Building property carModel
2025-05-27 22:59:26 - Binding column: AnnotatedJoinColumn(column='test_drive_id',referencedColumn='id')
2025-05-27 22:59:26 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property testDriveEntity
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.CarAddressEntity
2025-05-27 22:59:27 - Import with entity name CarAddressEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.CarAddressEntity on table car_address
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.CarAddressEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarAddressEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarAddressEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: car_address.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property address with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarAddressEntity:address]
2025-05-27 22:59:27 - building BasicValue for address
2025-05-27 22:59:27 - Skipping column re-registration: car_address.address
2025-05-27 22:59:27 - Building property address
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='car_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property car
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property mapLocation with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarAddressEntity:mapLocation]
2025-05-27 22:59:27 - building BasicValue for mapLocation
2025-05-27 22:59:27 - Skipping column re-registration: car_address.map_location
2025-05-27 22:59:27 - Building property mapLocation
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.CarEntity
2025-05-27 22:59:27 - Import with entity name CarEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.CarEntity on table cars
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.CarEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: cars.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='car_condition')
2025-05-27 22:59:27 - MetadataSourceProcessor property condition with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:condition]
2025-05-27 22:59:27 - building BasicValue for condition
2025-05-27 22:59:27 - Skipping column re-registration: cars.car_condition
2025-05-27 22:59:27 - Building property condition
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='create_time')
2025-05-27 22:59:27 - MetadataSourceProcessor property createTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:createTime]
2025-05-27 22:59:27 - building BasicValue for createTime
2025-05-27 22:59:27 - Skipping column re-registration: cars.create_time
2025-05-27 22:59:27 - Building property createTime
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property description with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:description]
2025-05-27 22:59:27 - building BasicValue for description
2025-05-27 22:59:27 - Skipping column re-registration: cars.description
2025-05-27 22:59:27 - Building property description
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property make with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:make]
2025-05-27 22:59:27 - building BasicValue for make
2025-05-27 22:59:27 - Skipping column re-registration: cars.make
2025-05-27 22:59:27 - Building property make
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property model with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:model]
2025-05-27 22:59:27 - building BasicValue for model
2025-05-27 22:59:27 - Skipping column re-registration: cars.model
2025-05-27 22:59:27 - Building property model
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property priceLabel with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:priceLabel]
2025-05-27 22:59:27 - building BasicValue for priceLabel
2025-05-27 22:59:27 - Skipping column re-registration: cars.price_label
2025-05-27 22:59:27 - Building property priceLabel
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property regularPrice with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:regularPrice]
2025-05-27 22:59:27 - building BasicValue for regularPrice
2025-05-27 22:59:27 - Skipping column re-registration: cars.regular_price
2025-05-27 22:59:27 - Building property regularPrice
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property requestPrice with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:requestPrice]
2025-05-27 22:59:27 - building BasicValue for requestPrice
2025-05-27 22:59:27 - Skipping column re-registration: cars.request_price
2025-05-27 22:59:27 - Building property requestPrice
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property salePrice with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:salePrice]
2025-05-27 22:59:27 - building BasicValue for salePrice
2025-05-27 22:59:27 - Skipping column re-registration: cars.sale_price
2025-05-27 22:59:27 - Building property salePrice
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property status with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:status]
2025-05-27 22:59:27 - building BasicValue for status
2025-05-27 22:59:27 - Skipping column re-registration: cars.status
2025-05-27 22:59:27 - Building property status
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property stockNumber with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:stockNumber]
2025-05-27 22:59:27 - building BasicValue for stockNumber
2025-05-27 22:59:27 - Skipping column re-registration: cars.stock_number
2025-05-27 22:59:27 - Building property stockNumber
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property title with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:title]
2025-05-27 22:59:27 - building BasicValue for title
2025-05-27 22:59:27 - Skipping column re-registration: cars.title
2025-05-27 22:59:27 - Building property title
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property type with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:type]
2025-05-27 22:59:27 - building BasicValue for type
2025-05-27 22:59:27 - Skipping column re-registration: cars.type
2025-05-27 22:59:27 - Building property type
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='update_time')
2025-05-27 22:59:27 - MetadataSourceProcessor property updateTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:updateTime]
2025-05-27 22:59:27 - building BasicValue for updateTime
2025-05-27 22:59:27 - Skipping column re-registration: cars.update_time
2025-05-27 22:59:27 - Building property updateTime
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='vendor_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property vendor
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property vinNumber with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:vinNumber]
2025-05-27 22:59:27 - building BasicValue for vinNumber
2025-05-27 22:59:27 - Skipping column re-registration: cars.vin_number
2025-05-27 22:59:27 - Building property vinNumber
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property year with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarEntity:year]
2025-05-27 22:59:27 - building BasicValue for year
2025-05-27 22:59:27 - Skipping column re-registration: cars.year
2025-05-27 22:59:27 - Building property year
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Adding onUpdate as PreUpdate callback for entity com.data.entity.CarEntity
2025-05-27 22:59:27 - Adding onCreate as PrePersist callback for entity com.data.entity.CarEntity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.CarFeaturesEntity
2025-05-27 22:59:27 - Import with entity name CarFeaturesEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.CarFeaturesEntity on table car_features
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.CarFeaturesEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarFeaturesEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: car_features.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property ACFront with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:ACFront]
2025-05-27 22:59:27 - building BasicValue for ACFront
2025-05-27 22:59:27 - Skipping column re-registration: car_features.acfront
2025-05-27 22:59:27 - Building property ACFront
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property ACRear with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:ACRear]
2025-05-27 22:59:27 - building BasicValue for ACRear
2025-05-27 22:59:27 - Skipping column re-registration: car_features.acrear
2025-05-27 22:59:27 - Building property ACRear
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property airbagDriver with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:airbagDriver]
2025-05-27 22:59:27 - building BasicValue for airbagDriver
2025-05-27 22:59:27 - Skipping column re-registration: car_features.airbag_driver
2025-05-27 22:59:27 - Building property airbagDriver
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property airbagPassenger with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:airbagPassenger]
2025-05-27 22:59:27 - building BasicValue for airbagPassenger
2025-05-27 22:59:27 - Skipping column re-registration: car_features.airbag_passenger
2025-05-27 22:59:27 - Building property airbagPassenger
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property amFmStereo with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:amFmStereo]
2025-05-27 22:59:27 - building BasicValue for amFmStereo
2025-05-27 22:59:27 - Skipping column re-registration: car_features.am_fm_stereo
2025-05-27 22:59:27 - Building property amFmStereo
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property antiLockBrakes with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:antiLockBrakes]
2025-05-27 22:59:27 - building BasicValue for antiLockBrakes
2025-05-27 22:59:27 - Skipping column re-registration: car_features.anti_lock_brakes
2025-05-27 22:59:27 - Building property antiLockBrakes
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property backupCamera with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:backupCamera]
2025-05-27 22:59:27 - building BasicValue for backupCamera
2025-05-27 22:59:27 - Skipping column re-registration: car_features.backup_camera
2025-05-27 22:59:27 - Building property backupCamera
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property bluetooth with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:bluetooth]
2025-05-27 22:59:27 - building BasicValue for bluetooth
2025-05-27 22:59:27 - Skipping column re-registration: car_features.bluetooth
2025-05-27 22:59:27 - Building property bluetooth
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property bucketSeats with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:bucketSeats]
2025-05-27 22:59:27 - building BasicValue for bucketSeats
2025-05-27 22:59:27 - Skipping column re-registration: car_features.bucket_seats
2025-05-27 22:59:27 - Building property bucketSeats
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='car_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property car
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property cdPlayer with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:cdPlayer]
2025-05-27 22:59:27 - building BasicValue for cdPlayer
2025-05-27 22:59:27 - Skipping column re-registration: car_features.cd_player
2025-05-27 22:59:27 - Building property cdPlayer
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property cruiseControl with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:cruiseControl]
2025-05-27 22:59:27 - building BasicValue for cruiseControl
2025-05-27 22:59:27 - Skipping column re-registration: car_features.cruise_control
2025-05-27 22:59:27 - Building property cruiseControl
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property dvdSystem with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:dvdSystem]
2025-05-27 22:59:27 - building BasicValue for dvdSystem
2025-05-27 22:59:27 - Skipping column re-registration: car_features.dvd_system
2025-05-27 22:59:27 - Building property dvdSystem
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property fogLights with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:fogLights]
2025-05-27 22:59:27 - building BasicValue for fogLights
2025-05-27 22:59:27 - Skipping column re-registration: car_features.fog_lights
2025-05-27 22:59:27 - Building property fogLights
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property handsFree with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:handsFree]
2025-05-27 22:59:27 - building BasicValue for handsFree
2025-05-27 22:59:27 - Skipping column re-registration: car_features.hands_free
2025-05-27 22:59:27 - Building property handsFree
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property heatedSeats with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:heatedSeats]
2025-05-27 22:59:27 - building BasicValue for heatedSeats
2025-05-27 22:59:27 - Skipping column re-registration: car_features.heated_seats
2025-05-27 22:59:27 - Building property heatedSeats
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property leatherInterior with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:leatherInterior]
2025-05-27 22:59:27 - building BasicValue for leatherInterior
2025-05-27 22:59:27 - Skipping column re-registration: car_features.leather_interior
2025-05-27 22:59:27 - Building property leatherInterior
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property memorySeats with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:memorySeats]
2025-05-27 22:59:27 - building BasicValue for memorySeats
2025-05-27 22:59:27 - Skipping column re-registration: car_features.memory_seats
2025-05-27 22:59:27 - Building property memorySeats
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property mp3Player with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:mp3Player]
2025-05-27 22:59:27 - building BasicValue for mp3Player
2025-05-27 22:59:27 - Skipping column re-registration: car_features.mp3player
2025-05-27 22:59:27 - Building property mp3Player
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property navigation with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:navigation]
2025-05-27 22:59:27 - building BasicValue for navigation
2025-05-27 22:59:27 - Skipping column re-registration: car_features.navigation
2025-05-27 22:59:27 - Building property navigation
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property portableAudio with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:portableAudio]
2025-05-27 22:59:27 - building BasicValue for portableAudio
2025-05-27 22:59:27 - Skipping column re-registration: car_features.portable_audio
2025-05-27 22:59:27 - Building property portableAudio
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property powerLocks with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:powerLocks]
2025-05-27 22:59:27 - building BasicValue for powerLocks
2025-05-27 22:59:27 - Skipping column re-registration: car_features.power_locks
2025-05-27 22:59:27 - Building property powerLocks
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property powerSeats with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:powerSeats]
2025-05-27 22:59:27 - building BasicValue for powerSeats
2025-05-27 22:59:27 - Skipping column re-registration: car_features.power_seats
2025-05-27 22:59:27 - Building property powerSeats
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property powerWindows with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:powerWindows]
2025-05-27 22:59:27 - building BasicValue for powerWindows
2025-05-27 22:59:27 - Skipping column re-registration: car_features.power_windows
2025-05-27 22:59:27 - Building property powerWindows
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property premiumAudio with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:premiumAudio]
2025-05-27 22:59:27 - building BasicValue for premiumAudio
2025-05-27 22:59:27 - Skipping column re-registration: car_features.premium_audio
2025-05-27 22:59:27 - Building property premiumAudio
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property rearWindow with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:rearWindow]
2025-05-27 22:59:27 - building BasicValue for rearWindow
2025-05-27 22:59:27 - Skipping column re-registration: car_features.rear_window
2025-05-27 22:59:27 - Building property rearWindow
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property sunroof with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:sunroof]
2025-05-27 22:59:27 - building BasicValue for sunroof
2025-05-27 22:59:27 - Skipping column re-registration: car_features.sunroof
2025-05-27 22:59:27 - Building property sunroof
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property thirdRowSeats with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:thirdRowSeats]
2025-05-27 22:59:27 - building BasicValue for thirdRowSeats
2025-05-27 22:59:27 - Skipping column re-registration: car_features.third_row_seats
2025-05-27 22:59:27 - Building property thirdRowSeats
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property towPackage with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:towPackage]
2025-05-27 22:59:27 - building BasicValue for towPackage
2025-05-27 22:59:27 - Skipping column re-registration: car_features.tow_package
2025-05-27 22:59:27 - Building property towPackage
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property windowsDefroster with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:windowsDefroster]
2025-05-27 22:59:27 - building BasicValue for windowsDefroster
2025-05-27 22:59:27 - Skipping column re-registration: car_features.windows_defroster
2025-05-27 22:59:27 - Building property windowsDefroster
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property wiperTintedGlass with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarFeaturesEntity:wiperTintedGlass]
2025-05-27 22:59:27 - building BasicValue for wiperTintedGlass
2025-05-27 22:59:27 - Skipping column re-registration: car_features.wiper_tinted_glass
2025-05-27 22:59:27 - Building property wiperTintedGlass
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.CarMediaEntity
2025-05-27 22:59:27 - Import with entity name CarMediaEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.CarMediaEntity on table car_media
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.CarMediaEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarMediaEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarMediaEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: car_media.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='car_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property car
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property photo1 with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarMediaEntity:photo1]
2025-05-27 22:59:27 - building BasicValue for photo1
2025-05-27 22:59:27 - Skipping column re-registration: car_media.photo1
2025-05-27 22:59:27 - Building property photo1
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property photo2 with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarMediaEntity:photo2]
2025-05-27 22:59:27 - building BasicValue for photo2
2025-05-27 22:59:27 - Skipping column re-registration: car_media.photo2
2025-05-27 22:59:27 - Building property photo2
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property photo3 with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarMediaEntity:photo3]
2025-05-27 22:59:27 - building BasicValue for photo3
2025-05-27 22:59:27 - Skipping column re-registration: car_media.photo3
2025-05-27 22:59:27 - Building property photo3
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property photo4 with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarMediaEntity:photo4]
2025-05-27 22:59:27 - building BasicValue for photo4
2025-05-27 22:59:27 - Skipping column re-registration: car_media.photo4
2025-05-27 22:59:27 - Building property photo4
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property photo5 with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarMediaEntity:photo5]
2025-05-27 22:59:27 - building BasicValue for photo5
2025-05-27 22:59:27 - Skipping column re-registration: car_media.photo5
2025-05-27 22:59:27 - Building property photo5
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property photo6 with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarMediaEntity:photo6]
2025-05-27 22:59:27 - building BasicValue for photo6
2025-05-27 22:59:27 - Skipping column re-registration: car_media.photo6
2025-05-27 22:59:27 - Building property photo6
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property videoUrl with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarMediaEntity:videoUrl]
2025-05-27 22:59:27 - building BasicValue for videoUrl
2025-05-27 22:59:27 - Skipping column re-registration: car_media.video_url
2025-05-27 22:59:27 - Building property videoUrl
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property vinReport with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarMediaEntity:vinReport]
2025-05-27 22:59:27 - building BasicValue for vinReport
2025-05-27 22:59:27 - Skipping column re-registration: car_media.vin_report
2025-05-27 22:59:27 - Building property vinReport
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.CarSpecificationsEntity
2025-05-27 22:59:27 - Import with entity name CarSpecificationsEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.CarSpecificationsEntity on table car_specifications
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.CarSpecificationsEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarSpecificationsEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='car_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property car
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property cityMPG with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:cityMPG]
2025-05-27 22:59:27 - building BasicValue for cityMPG
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.citympg
2025-05-27 22:59:27 - Building property cityMPG
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property color with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:color]
2025-05-27 22:59:27 - building BasicValue for color
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.color
2025-05-27 22:59:27 - Building property color
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property cylinders with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:cylinders]
2025-05-27 22:59:27 - building BasicValue for cylinders
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.cylinders
2025-05-27 22:59:27 - Building property cylinders
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property doors with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:doors]
2025-05-27 22:59:27 - building BasicValue for doors
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.doors
2025-05-27 22:59:27 - Building property doors
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property driverType with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:driverType]
2025-05-27 22:59:27 - building BasicValue for driverType
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.driver_type
2025-05-27 22:59:27 - Building property driverType
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property engineSize with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:engineSize]
2025-05-27 22:59:27 - building BasicValue for engineSize
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.engine_size
2025-05-27 22:59:27 - Building property engineSize
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property fuel with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:fuel]
2025-05-27 22:59:27 - building BasicValue for fuel
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.fuel
2025-05-27 22:59:27 - Building property fuel
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property highwayMPG with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:highwayMPG]
2025-05-27 22:59:27 - building BasicValue for highwayMPG
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.highwaympg
2025-05-27 22:59:27 - Building property highwayMPG
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property mileage with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:mileage]
2025-05-27 22:59:27 - building BasicValue for mileage
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.mileage
2025-05-27 22:59:27 - Building property mileage
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property seats with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:seats]
2025-05-27 22:59:27 - building BasicValue for seats
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.seats
2025-05-27 22:59:27 - Building property seats
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property transmission with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CarSpecificationsEntity:transmission]
2025-05-27 22:59:27 - building BasicValue for transmission
2025-05-27 22:59:27 - Skipping column re-registration: car_specifications.transmission
2025-05-27 22:59:27 - Building property transmission
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.CommissionEntity
2025-05-27 22:59:27 - Import with entity name CommissionEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.CommissionEntity on table commissions
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.CommissionEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CommissionEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CommissionEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: commissions.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property carCategory with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CommissionEntity:carCategory]
2025-05-27 22:59:27 - building BasicValue for carCategory
2025-05-27 22:59:27 - Skipping column re-registration: commissions.car_category
2025-05-27 22:59:27 - Building property carCategory
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property isPercentage with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CommissionEntity:isPercentage]
2025-05-27 22:59:27 - building BasicValue for isPercentage
2025-05-27 22:59:27 - Skipping column re-registration: commissions.is_percentage
2025-05-27 22:59:27 - Building property isPercentage
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property value with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.CommissionEntity:value]
2025-05-27 22:59:27 - building BasicValue for value
2025-05-27 22:59:27 - Skipping column re-registration: commissions.value
2025-05-27 22:59:27 - Building property value
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.ContactEntity
2025-05-27 22:59:27 - Import with entity name ContactEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.ContactEntity on table contact_us
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.ContactEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.ContactEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.ContactEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: contact_us.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='create_time')
2025-05-27 22:59:27 - MetadataSourceProcessor property createTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.ContactEntity:createTime]
2025-05-27 22:59:27 - building BasicValue for createTime
2025-05-27 22:59:27 - Skipping column re-registration: contact_us.create_time
2025-05-27 22:59:27 - Building property createTime
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property email with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.ContactEntity:email]
2025-05-27 22:59:27 - building BasicValue for email
2025-05-27 22:59:27 - Skipping column re-registration: contact_us.email
2025-05-27 22:59:27 - Building property email
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property message with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.ContactEntity:message]
2025-05-27 22:59:27 - building BasicValue for message
2025-05-27 22:59:27 - Skipping column re-registration: contact_us.message
2025-05-27 22:59:27 - Building property message
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property name with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.ContactEntity:name]
2025-05-27 22:59:27 - building BasicValue for name
2025-05-27 22:59:27 - Skipping column re-registration: contact_us.name
2025-05-27 22:59:27 - Building property name
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property phone with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.ContactEntity:phone]
2025-05-27 22:59:27 - building BasicValue for phone
2025-05-27 22:59:27 - Skipping column re-registration: contact_us.phone
2025-05-27 22:59:27 - Building property phone
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='update_time')
2025-05-27 22:59:27 - MetadataSourceProcessor property updateTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.ContactEntity:updateTime]
2025-05-27 22:59:27 - building BasicValue for updateTime
2025-05-27 22:59:27 - Skipping column re-registration: contact_us.update_time
2025-05-27 22:59:27 - Building property updateTime
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Adding onUpdate as PreUpdate callback for entity com.data.entity.ContactEntity
2025-05-27 22:59:27 - Adding onCreate as PrePersist callback for entity com.data.entity.ContactEntity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.MakeOfferEntity
2025-05-27 22:59:27 - Import with entity name MakeOfferEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.MakeOfferEntity on table make_offer
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.MakeOfferEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.MakeOfferEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.MakeOfferEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: make_offer.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='car_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property car
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property createTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.MakeOfferEntity:createTime]
2025-05-27 22:59:27 - building BasicValue for createTime
2025-05-27 22:59:27 - Skipping column re-registration: make_offer.create_time
2025-05-27 22:59:27 - Building property createTime
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property drivingLicenseNumber with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.MakeOfferEntity:drivingLicenseNumber]
2025-05-27 22:59:27 - building BasicValue for drivingLicenseNumber
2025-05-27 22:59:27 - Skipping column re-registration: make_offer.driving_license_number
2025-05-27 22:59:27 - Building property drivingLicenseNumber
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property finalOfferedPrice with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.MakeOfferEntity:finalOfferedPrice]
2025-05-27 22:59:27 - building BasicValue for finalOfferedPrice
2025-05-27 22:59:27 - Skipping column re-registration: make_offer.final_offered_price
2025-05-27 22:59:27 - Building property finalOfferedPrice
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property offeredPrice with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.MakeOfferEntity:offeredPrice]
2025-05-27 22:59:27 - building BasicValue for offeredPrice
2025-05-27 22:59:27 - Skipping column re-registration: make_offer.offered_price
2025-05-27 22:59:27 - Building property offeredPrice
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property status with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.MakeOfferEntity:status]
2025-05-27 22:59:27 - building BasicValue for status
2025-05-27 22:59:27 - Skipping column re-registration: make_offer.status
2025-05-27 22:59:27 - Building property status
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property updateTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.MakeOfferEntity:updateTime]
2025-05-27 22:59:27 - building BasicValue for updateTime
2025-05-27 22:59:27 - Skipping column re-registration: make_offer.update_time
2025-05-27 22:59:27 - Building property updateTime
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='user_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property user
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.PaymentEntity
2025-05-27 22:59:27 - Import with entity name PaymentEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.PaymentEntity on table payments
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.PaymentEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.PaymentEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.PaymentEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: payments.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property amount with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.PaymentEntity:amount]
2025-05-27 22:59:27 - building BasicValue for amount
2025-05-27 22:59:27 - Skipping column re-registration: payments.amount
2025-05-27 22:59:27 - Building property amount
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='create_time')
2025-05-27 22:59:27 - MetadataSourceProcessor property createTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.PaymentEntity:createTime]
2025-05-27 22:59:27 - building BasicValue for createTime
2025-05-27 22:59:27 - Skipping column re-registration: payments.create_time
2025-05-27 22:59:27 - Building property createTime
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='payment_date')
2025-05-27 22:59:27 - MetadataSourceProcessor property paymentDate with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.PaymentEntity:paymentDate]
2025-05-27 22:59:27 - building BasicValue for paymentDate
2025-05-27 22:59:27 - Skipping column re-registration: payments.payment_date
2025-05-27 22:59:27 - Building property paymentDate
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property status with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.PaymentEntity:status]
2025-05-27 22:59:27 - building BasicValue for status
2025-05-27 22:59:27 - Skipping column re-registration: payments.status
2025-05-27 22:59:27 - Building property status
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='update_time')
2025-05-27 22:59:27 - MetadataSourceProcessor property updateTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.PaymentEntity:updateTime]
2025-05-27 22:59:27 - building BasicValue for updateTime
2025-05-27 22:59:27 - Skipping column re-registration: payments.update_time
2025-05-27 22:59:27 - Building property updateTime
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='vendor_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property vendor
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.PurchasedCarEntity
2025-05-27 22:59:27 - Import with entity name PurchasedCarEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.PurchasedCarEntity on table purchased_cars
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.PurchasedCarEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.PurchasedCarEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.PurchasedCarEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: purchased_cars.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property carModel with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.PurchasedCarEntity:carModel]
2025-05-27 22:59:27 - building BasicValue for carModel
2025-05-27 22:59:27 - Skipping column re-registration: purchased_cars.car_model
2025-05-27 22:59:27 - Building property carModel
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property price with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.PurchasedCarEntity:price]
2025-05-27 22:59:27 - building BasicValue for price
2025-05-27 22:59:27 - Skipping column re-registration: purchased_cars.price
2025-05-27 22:59:27 - Building property price
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property purchaseDate with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.PurchasedCarEntity:purchaseDate]
2025-05-27 22:59:27 - building BasicValue for purchaseDate
2025-05-27 22:59:27 - Skipping column re-registration: purchased_cars.purchase_date
2025-05-27 22:59:27 - Building property purchaseDate
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='user_email')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property user
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.Role
2025-05-27 22:59:27 - Import with entity name Role
2025-05-27 22:59:27 - Bind entity com.data.entity.Role on table roles
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.Role] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.Role
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.Role:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: roles.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property name with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.Role:name]
2025-05-27 22:59:27 - building BasicValue for name
2025-05-27 22:59:27 - Skipping column re-registration: roles.name
2025-05-27 22:59:27 - Building property name
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.TestDriveEntity
2025-05-27 22:59:27 - Import with entity name TestDriveEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.TestDriveEntity on table test_drive
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.TestDriveEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.TestDriveEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.TestDriveEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: test_drive.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='car_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property car
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property createTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.TestDriveEntity:createTime]
2025-05-27 22:59:27 - building BasicValue for createTime
2025-05-27 22:59:27 - Skipping column re-registration: test_drive.create_time
2025-05-27 22:59:27 - Building property createTime
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property drivingLicenseNumber with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.TestDriveEntity:drivingLicenseNumber]
2025-05-27 22:59:27 - building BasicValue for drivingLicenseNumber
2025-05-27 22:59:27 - Skipping column re-registration: test_drive.driving_license_number
2025-05-27 22:59:27 - Building property drivingLicenseNumber
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property status with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.TestDriveEntity:status]
2025-05-27 22:59:27 - building BasicValue for status
2025-05-27 22:59:27 - Skipping column re-registration: test_drive.status
2025-05-27 22:59:27 - Building property status
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property updateTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.TestDriveEntity:updateTime]
2025-05-27 22:59:27 - building BasicValue for updateTime
2025-05-27 22:59:27 - Skipping column re-registration: test_drive.update_time
2025-05-27 22:59:27 - Building property updateTime
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='user_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property user
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.UserEntity
2025-05-27 22:59:27 - Import with entity name UserEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.UserEntity on table users
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.UserEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.UserEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: users.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property address with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:address]
2025-05-27 22:59:27 - building BasicValue for address
2025-05-27 22:59:27 - Skipping column re-registration: users.address
2025-05-27 22:59:27 - Building property address
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='create_time')
2025-05-27 22:59:27 - MetadataSourceProcessor property createTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:createTime]
2025-05-27 22:59:27 - building BasicValue for createTime
2025-05-27 22:59:27 - Skipping column re-registration: users.create_time
2025-05-27 22:59:27 - Building property createTime
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property dob with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:dob]
2025-05-27 22:59:27 - building BasicValue for dob
2025-05-27 22:59:27 - Skipping column re-registration: users.dob
2025-05-27 22:59:27 - Building property dob
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property email with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:email]
2025-05-27 22:59:27 - building BasicValue for email
2025-05-27 22:59:27 - Skipping column re-registration: users.email
2025-05-27 22:59:27 - Building property email
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property enabled with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:enabled]
2025-05-27 22:59:27 - building BasicValue for enabled
2025-05-27 22:59:27 - Skipping column re-registration: users.enabled
2025-05-27 22:59:27 - Building property enabled
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property firstName with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:firstName]
2025-05-27 22:59:27 - building BasicValue for firstName
2025-05-27 22:59:27 - Skipping column re-registration: users.first_name
2025-05-27 22:59:27 - Building property firstName
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property lastName with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:lastName]
2025-05-27 22:59:27 - building BasicValue for lastName
2025-05-27 22:59:27 - Skipping column re-registration: users.last_name
2025-05-27 22:59:27 - Building property lastName
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property password with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:password]
2025-05-27 22:59:27 - building BasicValue for password
2025-05-27 22:59:27 - Skipping column re-registration: users.password
2025-05-27 22:59:27 - Building property password
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property phoneNumber with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:phoneNumber]
2025-05-27 22:59:27 - building BasicValue for phoneNumber
2025-05-27 22:59:27 - Skipping column re-registration: users.phone_number
2025-05-27 22:59:27 - Building property phoneNumber
2025-05-27 22:59:27 - Binding column: IndexColumn(column='roles_ORDER')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='roles_KEY')
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='roles_KEY')
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='user_id')
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='role_id')
2025-05-27 22:59:27 - Collection role: com.data.entity.UserEntity.roles
2025-05-27 22:59:27 - Building property roles
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='temp_password_expiry')
2025-05-27 22:59:27 - MetadataSourceProcessor property tempPasswordExpiry with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:tempPasswordExpiry]
2025-05-27 22:59:27 - building BasicValue for tempPasswordExpiry
2025-05-27 22:59:27 - Skipping column re-registration: users.temp_password_expiry
2025-05-27 22:59:27 - Building property tempPasswordExpiry
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='update_time')
2025-05-27 22:59:27 - MetadataSourceProcessor property updateTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserEntity:updateTime]
2025-05-27 22:59:27 - building BasicValue for updateTime
2025-05-27 22:59:27 - Skipping column re-registration: users.update_time
2025-05-27 22:59:27 - Building property updateTime
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Adding onUpdate as PreUpdate callback for entity com.data.entity.UserEntity
2025-05-27 22:59:27 - Adding onCreate as PrePersist callback for entity com.data.entity.UserEntity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.UserHistoryEntity
2025-05-27 22:59:27 - Import with entity name UserHistoryEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.UserHistoryEntity on table user_history
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.UserHistoryEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.UserHistoryEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserHistoryEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: user_history.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='car_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property car
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property date with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserHistoryEntity:date]
2025-05-27 22:59:27 - building BasicValue for date
2025-05-27 22:59:27 - Skipping column re-registration: user_history.date
2025-05-27 22:59:27 - Building property date
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property historyType with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.UserHistoryEntity:historyType]
2025-05-27 22:59:27 - building BasicValue for historyType
2025-05-27 22:59:27 - Skipping column re-registration: user_history.history_type
2025-05-27 22:59:27 - Building property historyType
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='user_email')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property user
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.VendorEntity
2025-05-27 22:59:27 - Import with entity name VendorEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.VendorEntity on table vendors
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.VendorEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.VendorEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.VendorEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: vendors.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Binding column: IndexColumn(column='cars_ORDER')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='cars_KEY')
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='cars_KEY')
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn()
2025-05-27 22:59:27 - Collection role: com.data.entity.VendorEntity.cars
2025-05-27 22:59:27 - Building property cars
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='create_time')
2025-05-27 22:59:27 - MetadataSourceProcessor property createTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.VendorEntity:createTime]
2025-05-27 22:59:27 - building BasicValue for createTime
2025-05-27 22:59:27 - Skipping column re-registration: vendors.create_time
2025-05-27 22:59:27 - Building property createTime
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - MetadataSourceProcessor property enabled with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.VendorEntity:enabled]
2025-05-27 22:59:27 - building BasicValue for enabled
2025-05-27 22:59:27 - Skipping column re-registration: vendors.enabled
2025-05-27 22:59:27 - Building property enabled
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Binding column: IndexColumn(column='payments_ORDER')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='payments_KEY')
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='payments_KEY')
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn()
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn()
2025-05-27 22:59:27 - Collection role: com.data.entity.VendorEntity.payments
2025-05-27 22:59:27 - Building property payments
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='trade_license_number')
2025-05-27 22:59:27 - MetadataSourceProcessor property tradeLicenseNumber with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.VendorEntity:tradeLicenseNumber]
2025-05-27 22:59:27 - building BasicValue for tradeLicenseNumber
2025-05-27 22:59:27 - Skipping column re-registration: vendors.trade_license_number
2025-05-27 22:59:27 - Building property tradeLicenseNumber
2025-05-27 22:59:27 - Binding column: AnnotatedColumn(column='update_time')
2025-05-27 22:59:27 - MetadataSourceProcessor property updateTime with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.VendorEntity:updateTime]
2025-05-27 22:59:27 - building BasicValue for updateTime
2025-05-27 22:59:27 - Skipping column re-registration: vendors.update_time
2025-05-27 22:59:27 - Building property updateTime
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='user_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property user
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Adding onUpdate as PreUpdate callback for entity com.data.entity.VendorEntity
2025-05-27 22:59:27 - Adding onCreate as PrePersist callback for entity com.data.entity.VendorEntity
2025-05-27 22:59:27 - Binding entity from annotated class: com.data.entity.WishlistEntity
2025-05-27 22:59:27 - Import with entity name WishlistEntity
2025-05-27 22:59:27 - Bind entity com.data.entity.WishlistEntity on table wishlist
2025-05-27 22:59:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.WishlistEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.WishlistEntity
2025-05-27 22:59:27 - MetadataSourceProcessor property id with lazy=false
2025-05-27 22:59:27 - Attempting to locate auto-apply AttributeConverter for property [com.data.entity.WishlistEntity:id]
2025-05-27 22:59:27 - building BasicValue for id
2025-05-27 22:59:27 - Skipping column re-registration: wishlist.id
2025-05-27 22:59:27 - Building property id
2025-05-27 22:59:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='car_id')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property car
2025-05-27 22:59:27 - Binding column: AnnotatedJoinColumn(column='user_email')
2025-05-27 22:59:27 - Binding column: AnnotatedColumn()
2025-05-27 22:59:27 - Building property user
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for active
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for appointmentDate
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for carModel
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for address
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for mapLocation
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for condition
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for createTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for description
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for make
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for model
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for priceLabel
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for regularPrice
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for requestPrice
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for salePrice
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for status
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for stockNumber
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for title
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for type
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for updateTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for vinNumber
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for year
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for ACFront
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for ACRear
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for airbagDriver
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for airbagPassenger
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for amFmStereo
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for antiLockBrakes
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for backupCamera
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for bluetooth
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for bucketSeats
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for cdPlayer
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for cruiseControl
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for dvdSystem
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for fogLights
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for handsFree
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for heatedSeats
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for leatherInterior
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for memorySeats
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for mp3Player
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for navigation
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for portableAudio
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for powerLocks
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for powerSeats
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for powerWindows
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for premiumAudio
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for rearWindow
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for sunroof
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for thirdRowSeats
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for towPackage
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for windowsDefroster
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for wiperTintedGlass
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for photo1
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for photo2
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for photo3
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for photo4
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for photo5
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for photo6
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for videoUrl
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for vinReport
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for cityMPG
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for color
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for cylinders
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for doors
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for driverType
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for engineSize
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for fuel
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for highwayMPG
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for mileage
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for seats
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for transmission
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for carCategory
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for isPercentage
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for value
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for createTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for email
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for message
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for name
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for phone
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for updateTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for createTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for drivingLicenseNumber
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for finalOfferedPrice
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for offeredPrice
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for status
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for updateTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for amount
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for createTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for paymentDate
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for status
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for updateTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for carModel
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for price
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for purchaseDate
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for name
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for createTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for drivingLicenseNumber
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for status
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for updateTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for address
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for createTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for dob
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for email
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for enabled
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for firstName
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for lastName
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for password
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for phoneNumber
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for tempPasswordExpiry
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for updateTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for date
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for historyType
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for createTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for enabled
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for tradeLicenseNumber
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for updateTime
2025-05-27 22:59:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [admins]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [appointments]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [car_address]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [cars]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [car_features]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [car_media]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [car_specifications]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [commissions]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [contact_us]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [make_offer]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [payments]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [purchased_cars]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [test_drive]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [user_history]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [vendors]
2025-05-27 22:59:27 - Forcing column [id] to be non-null as it is part of the primary key for table [wishlist]
2025-05-27 22:59:27 - Second pass for collection: com.data.entity.UserEntity.roles
2025-05-27 22:59:27 - Binding a ManyToMany: com.data.entity.UserEntity.roles
2025-05-27 22:59:27 - HHH000194: Package not found or no package-info.java: com.data.entity
2025-05-27 22:59:27 - Forcing column [user_id] to be non-null as it is part of the primary key for table [user_roles]
2025-05-27 22:59:27 - Forcing column [role_id] to be non-null as it is part of the primary key for table [user_roles]
2025-05-27 22:59:27 - Mapped collection key: user_id, element: role_id
2025-05-27 22:59:27 - Building property address
2025-05-27 22:59:27 - Building property features
2025-05-27 22:59:27 - Building property media
2025-05-27 22:59:27 - Building property specifications
2025-05-27 22:59:27 - Second pass for collection: com.data.entity.VendorEntity.cars
2025-05-27 22:59:27 - Binding a OneToMany: com.data.entity.VendorEntity.cars through a foreign key
2025-05-27 22:59:27 - Mapping collection: com.data.entity.VendorEntity.cars -> cars
2025-05-27 22:59:27 - Retrieving property com.data.entity.CarEntity.vendor
2025-05-27 22:59:27 - Mapped collection key: vendor_id, one-to-many: com.data.entity.CarEntity
2025-05-27 22:59:27 - Second pass for collection: com.data.entity.VendorEntity.payments
2025-05-27 22:59:27 - Binding a OneToMany: com.data.entity.VendorEntity.payments through a foreign key
2025-05-27 22:59:27 - Mapping collection: com.data.entity.VendorEntity.payments -> payments
2025-05-27 22:59:27 - Retrieving property com.data.entity.PaymentEntity.vendor
2025-05-27 22:59:27 - Mapped collection key: vendor_id, one-to-many: com.data.entity.PaymentEntity
2025-05-27 22:59:27 - Processing association property references
2025-05-27 22:59:27 - Processing association property references
2025-05-27 22:59:27 - Building session factory
2025-05-27 22:59:27 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-27 22:59:27 - Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=18, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@48751d8a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\lenovo\Downloads\project work\data\data\target\classes;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.1\spring-boot-starter-data-jpa-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.1\spring-boot-starter-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot\3.4.1\spring-boot-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.1\spring-boot-autoconfigure-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.1\spring-boot-starter-logging-3.4.1.jar;C:\Users\lenovo\.m2\repository\ch\qos\logback\logback-classic\1.5.12\logback-classic-1.5.12.jar;C:\Users\lenovo\.m2\repository\ch\qos\logback\logback-core\1.5.12\logback-core-1.5.12.jar;C:\Users\lenovo\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\lenovo\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\lenovo\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\lenovo\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\lenovo\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.1\spring-boot-starter-jdbc-3.4.1.jar;C:\Users\lenovo\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-jdbc\6.2.1\spring-jdbc-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\hibernate\orm\hibernate-core\6.6.4.Final\hibernate-core-6.6.4.Final.jar;C:\Users\lenovo\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\lenovo\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\lenovo\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\lenovo\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\lenovo\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\lenovo\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\lenovo\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\lenovo\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\lenovo\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\lenovo\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\lenovo\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\lenovo\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\lenovo\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\lenovo\.m2\repository\org\springframework\data\spring-data-jpa\3.4.1\spring-data-jpa-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\data\spring-data-commons\3.4.1\spring-data-commons-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-orm\6.2.1\spring-orm-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-context\6.2.1\spring-context-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-tx\6.2.1\spring-tx-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-beans\6.2.1\spring-beans-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-aspects\6.2.1\spring-aspects-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.1\spring-boot-starter-web-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.1\spring-boot-starter-json-3.4.1.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.2\jackson-datatype-jdk8-2.18.2.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.2\jackson-datatype-jsr310-2.18.2.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.2\jackson-module-parameter-names-2.18.2.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.1\spring-boot-starter-tomcat-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.34\tomcat-embed-core-10.1.34.jar;C:\Users\lenovo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.34\tomcat-embed-websocket-10.1.34.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-web\6.2.1\spring-web-6.2.1.jar;C:\Users\lenovo\.m2\repository\io\micrometer\micrometer-observation\1.14.2\micrometer-observation-1.14.2.jar;C:\Users\lenovo\.m2\repository\io\micrometer\micrometer-commons\1.14.2\micrometer-commons-1.14.2.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-webmvc\6.2.1\spring-webmvc-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-expression\6.2.1\spring-expression-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\lenovo\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\lenovo\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-core\6.2.1\spring-core-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-jcl\6.2.1\spring-jcl-6.2.1.jar;C:\Users\lenovo\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.1\spring-boot-starter-validation-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.34\tomcat-embed-el-10.1.34.jar;C:\Users\lenovo\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\lenovo\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\lenovo\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar;C:\Users\lenovo\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.4.0\springdoc-openapi-starter-webmvc-ui-2.4.0.jar;C:\Users\lenovo\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.4.0\springdoc-openapi-starter-webmvc-api-2.4.0.jar;C:\Users\lenovo\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.4.0\springdoc-openapi-starter-common-2.4.0.jar;C:\Users\lenovo\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.20\swagger-core-jakarta-2.2.20.jar;C:\Users\lenovo\.m2\repository\org\apache\commons\commons-lang3\3.17.0\commons-lang3-3.17.0.jar;C:\Users\lenovo\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.20\swagger-annotations-jakarta-2.2.20.jar;C:\Users\lenovo\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.20\swagger-models-jakarta-2.2.20.jar;C:\Users\lenovo\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.18.2\jackson-dataformat-yaml-2.18.2.jar;C:\Users\lenovo\.m2\repository\org\webjars\swagger-ui\5.11.8\swagger-ui-5.11.8.jar;C:\Users\lenovo\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.1\spring-boot-starter-security-3.4.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\spring-aop\6.2.1\spring-aop-6.2.1.jar;C:\Users\lenovo\.m2\repository\org\springframework\security\spring-security-config\6.4.2\spring-security-config-6.4.2.jar;C:\Users\lenovo\.m2\repository\org\springframework\security\spring-security-core\6.4.2\spring-security-core-6.4.2.jar;C:\Users\lenovo\.m2\repository\org\springframework\security\spring-security-web\6.4.2\spring-security-web-6.4.2.jar;C:\Users\lenovo\.m2\repository\org\springframework\security\spring-security-crypto\6.4.2\spring-security-crypto-6.4.2.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.1.1\lib\idea_rt.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=18, os.name=Windows 10, APPLICATION_NAME=car-rental-app, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-18.0.1.1\bin, sun.java.command=com.data.CarSellApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@471a9e8c, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\lenovo, user.language=en, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, java.version.date=2022-04-22, java.home=C:\Program Files\Java\jdk-18.0.1.1, file.separator=\, java.vm.compressedOopsMode=32-bit, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, intellij.debug.agent=true, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, spring-boot.run.profiles=local, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=18.0.1.1+2-6, user.name=lenovo, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\lenovo\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\lenovo\AppData\Local\Temp\tomcat.8181.12078085351453609619, java.version=18.0.1.1, jboss.modules.system.pkgs=com.intellij.rt, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\lenovo\Downloads\project work\data\data, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=7704, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\lenovo\AppData\Local\Temp\tomcat.8181.12078085351453609619, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@40277077, native.encoding=Cp1252, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Java\jdk-18.0.1.1\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\lenovo\AppData\Roaming\fnm\node-versions\v20.18.3\installation;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\lenovo\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Java\jdk-18.0.1.1\bin;;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2024.3.1.1\bin;;C:\Users\lenovo\AppData\Local\Microsoft\WinGet\Packages\Schniz.fnm_Microsoft.Winget.Source_8wekyb3d8bbwe;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=18.0.1.1+2-6, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), debugger.agent.enable.coroutines=true, CONSOLE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss} - %msg%n, java.class.version=62.0, LOGGED_APPLICATION_NAME=[car-rental-app] }
2025-05-27 22:59:27 - Session factory constructed with filter configurations : {}
2025-05-27 22:59:27 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-27 22:59:27 - Trying to load META-INF/validation.xml via TCCL
2025-05-27 22:59:27 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-27 22:59:27 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-27 22:59:27 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-27 22:59:27 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-27 22:59:27 - Loaded expression factory via original TCCL
2025-05-27 22:59:27 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-27 22:59:27 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-27 22:59:27 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-27 22:59:27 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-27 22:59:27 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-27 22:59:27 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.Role] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.Role
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.UserEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.UserEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.CarFeaturesEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarFeaturesEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.VendorEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.VendorEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.TestDriveEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.TestDriveEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.PurchasedCarEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.PurchasedCarEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.WishlistEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.WishlistEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.CommissionEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CommissionEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.ContactEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.ContactEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.CarEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.MakeOfferEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.MakeOfferEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.PaymentEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.PaymentEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.CarMediaEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarMediaEntity
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.Appointment] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.Appointment
2025-05-27 22:59:27 - Not known whether passed class name [com.data.entity.UserHistoryEntity] is safe
2025-05-27 22:59:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.UserHistoryEntity
2025-05-27 22:59:28 - Not known whether passed class name [com.data.entity.AdminEntity] is safe
2025-05-27 22:59:28 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.AdminEntity
2025-05-27 22:59:28 - Not known whether passed class name [com.data.entity.CarAddressEntity] is safe
2025-05-27 22:59:28 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarAddressEntity
2025-05-27 22:59:28 - Not known whether passed class name [com.data.entity.CarSpecificationsEntity] is safe
2025-05-27 22:59:28 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarSpecificationsEntity
2025-05-27 22:59:28 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1dd9a3ae] under count; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6ad26381] under every; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4b20aa21] under any; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@799cf32d] under sinh; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@331ad6eb] under cosh; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cd6698b] under tanh; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ac7550a] under pi; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44dcc0e4] under log; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-05-27 22:59:28 - Registering alternate key : length -> character_length
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5870fc05] under position; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2336d3f] under overlay; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6c4786af] under trim; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7d0df326] under cast; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43f7f48d] under collate; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@77307b51] under extract; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1cca2e9d] under ifnull; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4850d66b] under pad; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@464d60fb] under str; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@121dac1a] under format; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2c3b0cc8] under timestampadd; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@61d8a491] under timestampdiff; prior registration was null
2025-05-27 22:59:28 - Registering alternate key : dateadd -> timestampadd
2025-05-27 22:59:28 - Registering alternate key : datediff -> timestampdiff
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@550f522b] under current_date; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1842dc39] under current_time; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a7fc4c1] under current_timestamp; prior registration was null
2025-05-27 22:59:28 - Registering alternate key : current date -> current_date
2025-05-27 22:59:28 - Registering alternate key : current time -> current_time
2025-05-27 22:59:28 - Registering alternate key : current timestamp -> current_timestamp
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@270097ce] under local_date; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8b1170f] under local_time; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69cb134] under local_datetime; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@125124ea] under offset_datetime; prior registration was null
2025-05-27 22:59:28 - Registering alternate key : local date -> local_date
2025-05-27 22:59:28 - Registering alternate key : local time -> local_time
2025-05-27 22:59:28 - Registering alternate key : local datetime -> local_datetime
2025-05-27 22:59:28 - Registering alternate key : offset datetime -> offset_datetime
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@314c6f89] under instant; prior registration was null
2025-05-27 22:59:28 - Registering alternate key : current_instant -> instant
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1bbc1b90] under sql; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44dcc0e4
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@a5d23c9] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@795131d6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2025-05-27 22:59:28 - Registering alternate key : day -> dayofmonth
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d7a8d23] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5870fc05
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@450f0d89] under trunc; prior registration was null
2025-05-27 22:59:28 - Registering alternate key : truncate -> trunc
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@50a1af86] under bitand; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e0327dd] under bitor; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ebff59d] under bitxor; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3361d286] under bitnot; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6ee186f3] under format; prior registration was org.hibernate.dialect.function.FormatFunction@121dac1a
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@8b1170f
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@69cb134
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49fb693d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ac7550a
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@38197e82] under chr; prior registration was null
2025-05-27 22:59:28 - Registering alternate key : char -> chr
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5516ee5] under sysdate; prior registration was null
2025-05-27 22:59:28 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@8f374de] under listagg; prior registration was null
2025-05-27 22:59:28 - abs(NUMERIC arg)
2025-05-27 22:59:28 - Double acos(NUMERIC arg)
2025-05-27 22:59:28 - adddate(DATE datetime, INTEGER days)
2025-05-27 22:59:28 - addtime(TIME datetime, TIME time)
2025-05-27 22:59:28 - Boolean any(BOOLEAN arg)
2025-05-27 22:59:28 - Integer ascii(STRING arg)
2025-05-27 22:59:28 - Double asin(NUMERIC arg)
2025-05-27 22:59:28 - Double atan(NUMERIC arg)
2025-05-27 22:59:28 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-05-27 22:59:28 - avg(arg)
2025-05-27 22:59:28 - bit_and(arg)
2025-05-27 22:59:28 - Integer bit_length(STRING_OR_CLOB arg)
2025-05-27 22:59:28 - bit_or(arg)
2025-05-27 22:59:28 - bitand(arg0, arg1)
2025-05-27 22:59:28 - bitnot(arg)
2025-05-27 22:59:28 - bitor(arg0, arg1)
2025-05-27 22:59:28 - bitxor(arg0, arg1)
2025-05-27 22:59:28 - cast(arg as Type)
2025-05-27 22:59:28 - ceiling(NUMERIC arg)
2025-05-27 22:59:28 - Character char(INTEGER arg)
2025-05-27 22:59:28 - Integer character_length(STRING_OR_CLOB arg)
2025-05-27 22:59:28 - Character chr(INTEGER arg)
2025-05-27 22:59:28 - coalesce(arg0[, arg1[, ...]])
2025-05-27 22:59:28 - String collate(STRING string as COLLATION collation)
2025-05-27 22:59:28 - String concat(STRING string0[, STRING string1[, ...]])
2025-05-27 22:59:28 - Double cos(NUMERIC arg)
2025-05-27 22:59:28 - Double cosh(NUMERIC arg)
2025-05-27 22:59:28 - Double cot(NUMERIC arg)
2025-05-27 22:59:28 - Long count([distinct ]{arg|*})
2025-05-27 22:59:28 - Integer crc32(arg)
2025-05-27 22:59:28 - Date curdate()
2025-05-27 22:59:28 - Date current date
2025-05-27 22:59:28 - Time current time
2025-05-27 22:59:28 - Timestamp current timestamp
2025-05-27 22:59:28 - Date current_date
2025-05-27 22:59:28 - Instant current_instant
2025-05-27 22:59:28 - Time current_time
2025-05-27 22:59:28 - Timestamp current_timestamp
2025-05-27 22:59:28 - Time curtime()
2025-05-27 22:59:28 - Date date(arg)
2025-05-27 22:59:28 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-05-27 22:59:28 - Integer datediff(DATE end, DATE start)
2025-05-27 22:59:28 - Integer day(DATE arg)
2025-05-27 22:59:28 - String dayname(DATE arg)
2025-05-27 22:59:28 - Integer dayofmonth(DATE arg)
2025-05-27 22:59:28 - Integer dayofweek(DATE arg)
2025-05-27 22:59:28 - Integer dayofyear(DATE arg)
2025-05-27 22:59:28 - Double degrees(NUMERIC arg)
2025-05-27 22:59:28 - Boolean every(BOOLEAN arg)
2025-05-27 22:59:28 - Double exp(NUMERIC arg)
2025-05-27 22:59:28 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-05-27 22:59:28 - floor(NUMERIC arg)
2025-05-27 22:59:28 - String format(TEMPORAL datetime as STRING pattern)
2025-05-27 22:59:28 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-05-27 22:59:28 - Integer hour(TIME arg)
2025-05-27 22:59:28 - ifnull(arg0, arg1)
2025-05-27 22:59:28 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-05-27 22:59:28 - Instant instant
2025-05-27 22:59:28 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2025-05-27 22:59:28 - Date last_day(DATE arg)
2025-05-27 22:59:28 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-05-27 22:59:28 - String left(STRING string, INTEGER length)
2025-05-27 22:59:28 - Integer length(STRING_OR_CLOB arg)
2025-05-27 22:59:28 - String listagg(STRING arg0, STRING arg1)
2025-05-27 22:59:28 - Double ln(NUMERIC arg)
2025-05-27 22:59:28 - LocalDate local date
2025-05-27 22:59:28 - LocalDateTime local datetime
2025-05-27 22:59:28 - LocalTime local time
2025-05-27 22:59:28 - LocalDate local_date
2025-05-27 22:59:28 - LocalDateTime local_datetime
2025-05-27 22:59:28 - LocalTime local_time
2025-05-27 22:59:28 - Timestamp localtime
2025-05-27 22:59:28 - Timestamp localtimestamp
2025-05-27 22:59:28 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-05-27 22:59:28 - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-05-27 22:59:28 - Double log10(NUMERIC arg)
2025-05-27 22:59:28 - Double log2(NUMERIC arg)
2025-05-27 22:59:28 - String lower(STRING string)
2025-05-27 22:59:28 - String lpad(string, length[, padding])
2025-05-27 22:59:28 - String ltrim(STRING string[, STRING characters])
2025-05-27 22:59:28 - Date makedate(INTEGER year, INTEGER dayofyear)
2025-05-27 22:59:28 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2025-05-27 22:59:28 - max(COMPARABLE arg)
2025-05-27 22:59:28 - String md5(arg)
2025-05-27 22:59:28 - Integer microsecond(TIME arg)
2025-05-27 22:59:28 - min(COMPARABLE arg)
2025-05-27 22:59:28 - Integer minute(TIME arg)
2025-05-27 22:59:28 - Integer mod(INTEGER arg0, INTEGER arg1)
2025-05-27 22:59:28 - Integer month(DATE arg)
2025-05-27 22:59:28 - String monthname(DATE arg)
2025-05-27 22:59:28 - Timestamp now()
2025-05-27 22:59:28 - nullif(arg0, arg1)
2025-05-27 22:59:28 - Integer octet_length(STRING_OR_CLOB arg)
2025-05-27 22:59:28 - OffsetDateTime offset datetime
2025-05-27 22:59:28 - OffsetDateTime offset_datetime
2025-05-27 22:59:28 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-05-27 22:59:28 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-05-27 22:59:28 - Double pi
2025-05-27 22:59:28 - Integer position(STRING pattern in STRING string)
2025-05-27 22:59:28 - Double power(NUMERIC arg0, NUMERIC arg1)
2025-05-27 22:59:28 - Integer quarter(DATE arg)
2025-05-27 22:59:28 - Double radians(NUMERIC arg)
2025-05-27 22:59:28 - Double rand([INTEGER seed])
2025-05-27 22:59:28 - String repeat(STRING string, INTEGER times)
2025-05-27 22:59:28 - String replace(STRING string, STRING pattern, STRING replacement)
2025-05-27 22:59:28 - String reverse(STRING arg)
2025-05-27 22:59:28 - String right(STRING string, INTEGER length)
2025-05-27 22:59:28 - round(NUMERIC number[, INTEGER places])
2025-05-27 22:59:28 - String rpad(string, length[, padding])
2025-05-27 22:59:28 - String rtrim(STRING string[, STRING characters])
2025-05-27 22:59:28 - Integer second(TIME arg)
2025-05-27 22:59:28 - String sha(arg)
2025-05-27 22:59:28 - String sha1(arg)
2025-05-27 22:59:28 - String sha2(arg0, arg1)
2025-05-27 22:59:28 - Integer sign(NUMERIC arg)
2025-05-27 22:59:28 - Double sin(NUMERIC arg)
2025-05-27 22:59:28 - Double sinh(NUMERIC arg)
2025-05-27 22:59:28 - String soundex(arg)
2025-05-27 22:59:28 - String space(INTEGER arg)
2025-05-27 22:59:28 - Object sql
2025-05-27 22:59:28 - Double sqrt(NUMERIC arg)
2025-05-27 22:59:28 - Double stddev(NUMERIC arg)
2025-05-27 22:59:28 - Double stddev_pop(NUMERIC arg)
2025-05-27 22:59:28 - Double stddev_samp(NUMERIC arg)
2025-05-27 22:59:28 - String str(arg)
2025-05-27 22:59:28 - subdate(DATE datetime, INTEGER days)
2025-05-27 22:59:28 - String substr(STRING string, INTEGER start[, INTEGER length])
2025-05-27 22:59:28 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-05-27 22:59:28 - subtime(TIME datetime, TIME time)
2025-05-27 22:59:28 - sum(arg)
2025-05-27 22:59:28 - Timestamp sysdate()
2025-05-27 22:59:28 - Double tan(NUMERIC arg)
2025-05-27 22:59:28 - Double tanh(NUMERIC arg)
2025-05-27 22:59:28 - String time(arg)
2025-05-27 22:59:28 - Timestamp timestamp(arg0[, arg1])
2025-05-27 22:59:28 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-05-27 22:59:28 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-05-27 22:59:28 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-05-27 22:59:28 - trunc( ... )
2025-05-27 22:59:28 - truncate( ... )
2025-05-27 22:59:28 - String upper(STRING string)
2025-05-27 22:59:28 - Date utc_date
2025-05-27 22:59:28 - Time utc_time
2025-05-27 22:59:28 - Timestamp utc_timestamp
2025-05-27 22:59:28 - Double var_pop(NUMERIC arg)
2025-05-27 22:59:28 - Double var_samp(NUMERIC arg)
2025-05-27 22:59:28 - Double variance(NUMERIC arg)
2025-05-27 22:59:28 - Integer week(DATE arg)
2025-05-27 22:59:28 - Integer year(DATE arg)
2025-05-27 22:59:28 - Starting QueryInterpretationCache(2048)
2025-05-27 22:59:28 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-27 22:59:28 - Configured EntityCopyObserver strategy: disallow
2025-05-27 22:59:28 - Not known whether passed class name [com.data.entity.Role] is safe
2025-05-27 22:59:28 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.Role
2025-05-27 22:59:28 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.Role]: private accessor [name]
2025-05-27 22:59:28 - Not known whether passed class name [com.data.entity.UserEntity] is safe
2025-05-27 22:59:28 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.UserEntity
2025-05-27 22:59:28 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.UserEntity]: private accessor [address]
2025-05-27 22:59:28 - To-one property `com.data.entity.CarFeaturesEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:28 - To-one property `com.data.entity.CarFeaturesEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:28 - Not known whether passed class name [com.data.entity.CarFeaturesEntity] is safe
2025-05-27 22:59:28 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarFeaturesEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.CarFeaturesEntity]: private accessor [ACFront]
2025-05-27 22:59:29 - To-one property `com.data.entity.CarFeaturesEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.VendorEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.VendorEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.VendorEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.VendorEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.VendorEntity]: private accessor [cars]
2025-05-27 22:59:29 - To-one property `com.data.entity.VendorEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.TestDriveEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.TestDriveEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.TestDriveEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.TestDriveEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.TestDriveEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.TestDriveEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.TestDriveEntity]: private accessor [car]
2025-05-27 22:59:29 - To-one property `com.data.entity.TestDriveEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.TestDriveEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.PurchasedCarEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.PurchasedCarEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.PurchasedCarEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.PurchasedCarEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.PurchasedCarEntity]: private accessor [carModel]
2025-05-27 22:59:29 - To-one property `com.data.entity.PurchasedCarEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.WishlistEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.WishlistEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.WishlistEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.WishlistEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.WishlistEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.WishlistEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.WishlistEntity]: private accessor [car]
2025-05-27 22:59:29 - To-one property `com.data.entity.WishlistEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.WishlistEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.CommissionEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CommissionEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.CommissionEntity]: private accessor [carCategory]
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.ContactEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.ContactEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.ContactEntity]: private accessor [createTime]
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.CarEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.CarEntity]: private accessor [address]
2025-05-27 22:59:29 - To-one property `com.data.entity.MakeOfferEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.MakeOfferEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.MakeOfferEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.MakeOfferEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.MakeOfferEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.MakeOfferEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.MakeOfferEntity]: private accessor [car]
2025-05-27 22:59:29 - To-one property `com.data.entity.MakeOfferEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.MakeOfferEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.PaymentEntity#vendor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.PaymentEntity#vendor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.PaymentEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.PaymentEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.PaymentEntity]: private accessor [amount]
2025-05-27 22:59:29 - To-one property `com.data.entity.PaymentEntity#vendor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.CarMediaEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.CarMediaEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.CarMediaEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarMediaEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.CarMediaEntity]: private accessor [car]
2025-05-27 22:59:29 - To-one property `com.data.entity.CarMediaEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.Appointment#testDriveEntity` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.Appointment#testDriveEntity` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.Appointment] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.Appointment
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.Appointment]: private accessor [appointmentDate]
2025-05-27 22:59:29 - To-one property `com.data.entity.Appointment#testDriveEntity` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.UserHistoryEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.UserHistoryEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.UserHistoryEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.UserHistoryEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.UserHistoryEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.UserHistoryEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.UserHistoryEntity]: private accessor [car]
2025-05-27 22:59:29 - To-one property `com.data.entity.UserHistoryEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.UserHistoryEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.AdminEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.AdminEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.AdminEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.AdminEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.AdminEntity]: private accessor [active]
2025-05-27 22:59:29 - To-one property `com.data.entity.AdminEntity#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.CarAddressEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.CarAddressEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.CarAddressEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarAddressEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.CarAddressEntity]: private accessor [address]
2025-05-27 22:59:29 - To-one property `com.data.entity.CarAddressEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.CarSpecificationsEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - To-one property `com.data.entity.CarSpecificationsEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Not known whether passed class name [com.data.entity.CarSpecificationsEntity] is safe
2025-05-27 22:59:29 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.data.entity.CarSpecificationsEntity
2025-05-27 22:59:29 - HHH000513: Unable to create the ReflectionOptimizer for [com.data.entity.CarSpecificationsEntity]: private accessor [car]
2025-05-27 22:59:29 - To-one property `com.data.entity.CarSpecificationsEntity#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-27 22:59:29 - Skipping collection row updates - com.data.entity.UserEntity.roles
2025-05-27 22:59:29 - Skipping collection (re)creation - com.data.entity.VendorEntity.cars
2025-05-27 22:59:29 - Skipping collection row deletions - com.data.entity.VendorEntity.cars
2025-05-27 22:59:29 - Skipping collection removals - com.data.entity.VendorEntity.cars
2025-05-27 22:59:29 - Skipping collection (re)creation - com.data.entity.VendorEntity.payments
2025-05-27 22:59:29 - Skipping collection row deletions - com.data.entity.VendorEntity.payments
2025-05-27 22:59:29 - Skipping collection removals - com.data.entity.VendorEntity.payments
2025-05-27 22:59:29 - Forcing FetchTiming.IMMEDIATE for to-one association : NavigableRole[com.data.entity.CarEntity].address
2025-05-27 22:59:29 - Forcing FetchTiming.IMMEDIATE for to-one association : NavigableRole[com.data.entity.CarEntity].features
2025-05-27 22:59:29 - Forcing FetchTiming.IMMEDIATE for to-one association : NavigableRole[com.data.entity.CarEntity].media
2025-05-27 22:59:29 - Forcing FetchTiming.IMMEDIATE for to-one association : NavigableRole[com.data.entity.CarEntity].specifications
2025-05-27 22:59:29 - Starting post-init callbacks
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.Role) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.data.entity.UserEntity.roles#{element}]) - element descriptor
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.data.entity.UserEntity.roles)#finishInitialization
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.data.entity.UserEntity.roles) - key descriptor
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.UserEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.CarFeaturesEntity.car]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.CarFeaturesEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.data.entity.VendorEntity.cars#{element}]) - element descriptor
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.data.entity.VendorEntity.cars)#finishInitialization
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.data.entity.VendorEntity.cars) - key descriptor
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.data.entity.VendorEntity.payments#{element}]) - element descriptor
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.data.entity.VendorEntity.payments)#finishInitialization
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.data.entity.VendorEntity.payments) - key descriptor
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.VendorEntity.user]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.VendorEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.TestDriveEntity.car]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.TestDriveEntity.user]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.TestDriveEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.PurchasedCarEntity.user]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.PurchasedCarEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.WishlistEntity.car]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.WishlistEntity.user]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.WishlistEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.CommissionEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.ContactEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.CarEntity.address]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.CarEntity.features]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.CarEntity.media]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.CarEntity.specifications]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.CarEntity.vendor]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.CarEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.MakeOfferEntity.car]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.MakeOfferEntity.user]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.MakeOfferEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.PaymentEntity.vendor]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.PaymentEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.CarMediaEntity.car]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.CarMediaEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.Appointment.testDriveEntity]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.Appointment) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.UserHistoryEntity.car]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.UserHistoryEntity.user]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.UserHistoryEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.AdminEntity.user]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.AdminEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.CarAddressEntity.car]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.CarAddressEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.data.entity.CarSpecificationsEntity.car]
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : Entity(com.data.entity.CarSpecificationsEntity) `staticFetchableList` generator
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.data.entity.VendorEntity.cars#{element}]) - element descriptor
2025-05-27 22:59:29 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.data.entity.VendorEntity.payments#{element}]) - element descriptor
2025-05-27 22:59:29 - Created new SQL alias : r1_0
2025-05-27 22:59:29 - Registration of TableGroup [StandardTableGroup(com.data.entity.Role)] with identifierForTableGroup [com.data.entity.Role] for NavigablePath [com.data.entity.Role]
2025-05-27 22:59:29 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.Role]
 |  \-BasicFetch [com.data.entity.Role.name]

2025-05-27 22:59:29 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : com.data.entity.Role) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.Role
2025-05-27 22:59:30 -  Version select: select id from roles where id=?
2025-05-27 22:59:30 -  Insert (0): insert into roles (name) values (?)
2025-05-27 22:59:30 -  Update (0): update roles set name=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from roles where id=?
2025-05-27 22:59:30 - Created new SQL alias : ue1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.UserEntity)] with identifierForTableGroup [com.data.entity.UserEntity] for NavigablePath [com.data.entity.UserEntity]
2025-05-27 22:59:30 - Created new SQL alias : r1_0
2025-05-27 22:59:30 - Registration of TableGroup [CollectionTableGroup(com.data.entity.UserEntity.roles)] with identifierForTableGroup [com.data.entity.UserEntity.roles] for NavigablePath [com.data.entity.UserEntity.roles]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3618486e] with identifierForTableGroup [com.data.entity.UserEntity.roles.{element}] for NavigablePath [com.data.entity.UserEntity.roles.{element}]
2025-05-27 22:59:30 - Created new SQL alias : r1_1
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.UserEntity]
 |  +-BasicFetch [com.data.entity.UserEntity.address]
 |  +-BasicFetch [com.data.entity.UserEntity.createTime]
 |  +-BasicFetch [com.data.entity.UserEntity.dob]
 |  +-BasicFetch [com.data.entity.UserEntity.email]
 |  +-BasicFetch [com.data.entity.UserEntity.enabled]
 |  +-BasicFetch [com.data.entity.UserEntity.firstName]
 |  +-BasicFetch [com.data.entity.UserEntity.lastName]
 |  +-BasicFetch [com.data.entity.UserEntity.password]
 |  +-BasicFetch [com.data.entity.UserEntity.phoneNumber]
 |  +-EagerCollectionFetch [com.data.entity.UserEntity.roles]
 |  |  \-EntityFetchJoinedImpl [com.data.entity.UserEntity.roles.{element}]
 |  |  |  \-BasicFetch [com.data.entity.UserEntity.roles.{element}.name]
 |  +-BasicFetch [com.data.entity.UserEntity.tempPasswordExpiry]
 |  \-BasicFetch [com.data.entity.UserEntity.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ue1 : com.data.entity.UserEntity) {
          primaryTableReference : users as ue1_0
          TableGroupJoins {
            left  join CollectionTableGroup (r1 : com.data.entity.UserEntity.roles) {
              primaryTableReference : user_roles as r1_0
              TableGroupJoins {
                left  join LazyTableGroup (r1 : com.data.entity.UserEntity.roles.{element}) {
                  primaryTableReference : roles as r1_1
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.UserEntity
2025-05-27 22:59:30 -  Version select: select id from users where id=?
2025-05-27 22:59:30 -  Insert (0): insert into users (address,create_time,dob,email,enabled,first_name,last_name,password,phone_number,temp_password_expiry,update_time) values (?,?,?,?,?,?,?,?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update users set address=?,dob=?,email=?,enabled=?,first_name=?,last_name=?,password=?,phone_number=?,temp_password_expiry=?,update_time=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from users where id=?
2025-05-27 22:59:30 - Created new SQL alias : cfe1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.CarFeaturesEntity)] with identifierForTableGroup [com.data.entity.CarFeaturesEntity] for NavigablePath [com.data.entity.CarFeaturesEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1e9afe4e] with identifierForTableGroup [com.data.entity.CarFeaturesEntity.car] for NavigablePath [com.data.entity.CarFeaturesEntity.car]
2025-05-27 22:59:30 - Created new SQL alias : c1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1ae2028d] with identifierForTableGroup [com.data.entity.CarFeaturesEntity.car.vendor] for NavigablePath [com.data.entity.CarFeaturesEntity.car.vendor]
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.CarFeaturesEntity]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.ACFront]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.ACRear]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.airbagDriver]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.airbagPassenger]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.amFmStereo]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.antiLockBrakes]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.backupCamera]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.bluetooth]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.bucketSeats]
 |  +-EntityFetchJoinedImpl [com.data.entity.CarFeaturesEntity.car]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarFeaturesEntity.car.address]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.condition]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.createTime]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.description]
 |  |  +-CircularBiDirectionalFetchImpl [com.data.entity.CarFeaturesEntity.car.features]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.make]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarFeaturesEntity.car.media]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.model]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.priceLabel]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.regularPrice]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.requestPrice]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.salePrice]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarFeaturesEntity.car.specifications]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.status]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.stockNumber]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.title]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.type]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.updateTime]
 |  |  +-EntityDelayedFetchImpl [com.data.entity.CarFeaturesEntity.car.vendor]
 |  |  +-BasicFetch [com.data.entity.CarFeaturesEntity.car.vinNumber]
 |  |  \-BasicFetch [com.data.entity.CarFeaturesEntity.car.year]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.cdPlayer]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.cruiseControl]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.dvdSystem]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.fogLights]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.handsFree]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.heatedSeats]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.leatherInterior]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.memorySeats]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.mp3Player]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.navigation]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.portableAudio]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.powerLocks]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.powerSeats]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.powerWindows]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.premiumAudio]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.rearWindow]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.sunroof]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.thirdRowSeats]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.towPackage]
 |  +-BasicFetch [com.data.entity.CarFeaturesEntity.windowsDefroster]
 |  \-BasicFetch [com.data.entity.CarFeaturesEntity.wiperTintedGlass]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (cfe1 : com.data.entity.CarFeaturesEntity) {
          primaryTableReference : car_features as cfe1_0
          TableGroupJoins {
             join LazyTableGroup (c1 : com.data.entity.CarFeaturesEntity.car) {
              primaryTableReference : cars as c1_0
              TableGroupJoins {
                left  join LazyTableGroup (v1 : com.data.entity.CarFeaturesEntity.car.vendor) {
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.CarFeaturesEntity
2025-05-27 22:59:30 -  Version select: select id from car_features where id=?
2025-05-27 22:59:30 -  Insert (0): insert into car_features (acfront,acrear,airbag_driver,airbag_passenger,am_fm_stereo,anti_lock_brakes,backup_camera,bluetooth,bucket_seats,car_id,cd_player,cruise_control,dvd_system,fog_lights,hands_free,heated_seats,leather_interior,memory_seats,mp3player,navigation,portable_audio,power_locks,power_seats,power_windows,premium_audio,rear_window,sunroof,third_row_seats,tow_package,windows_defroster,wiper_tinted_glass) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update car_features set acfront=?,acrear=?,airbag_driver=?,airbag_passenger=?,am_fm_stereo=?,anti_lock_brakes=?,backup_camera=?,bluetooth=?,bucket_seats=?,car_id=?,cd_player=?,cruise_control=?,dvd_system=?,fog_lights=?,hands_free=?,heated_seats=?,leather_interior=?,memory_seats=?,mp3player=?,navigation=?,portable_audio=?,power_locks=?,power_seats=?,power_windows=?,premium_audio=?,rear_window=?,sunroof=?,third_row_seats=?,tow_package=?,windows_defroster=?,wiper_tinted_glass=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from car_features where id=?
2025-05-27 22:59:30 - Created new SQL alias : ve1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.VendorEntity)] with identifierForTableGroup [com.data.entity.VendorEntity] for NavigablePath [com.data.entity.VendorEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3da701a1] with identifierForTableGroup [com.data.entity.VendorEntity.user] for NavigablePath [com.data.entity.VendorEntity.user]
2025-05-27 22:59:30 - Created new SQL alias : u1_0
2025-05-27 22:59:30 - Created new SQL alias : r1_0
2025-05-27 22:59:30 - Registration of TableGroup [CollectionTableGroup(com.data.entity.VendorEntity.user.roles)] with identifierForTableGroup [com.data.entity.VendorEntity.user.roles] for NavigablePath [com.data.entity.VendorEntity.user.roles]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f51d1cc] with identifierForTableGroup [com.data.entity.VendorEntity.user.roles.{element}] for NavigablePath [com.data.entity.VendorEntity.user.roles.{element}]
2025-05-27 22:59:30 - Created new SQL alias : r1_1
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.VendorEntity]
 |  +-DelayedCollectionFetch [com.data.entity.VendorEntity.cars]
 |  +-BasicFetch [com.data.entity.VendorEntity.createTime]
 |  +-BasicFetch [com.data.entity.VendorEntity.enabled]
 |  +-DelayedCollectionFetch [com.data.entity.VendorEntity.payments]
 |  +-BasicFetch [com.data.entity.VendorEntity.tradeLicenseNumber]
 |  +-BasicFetch [com.data.entity.VendorEntity.updateTime]
 |  \-EntityFetchJoinedImpl [com.data.entity.VendorEntity.user]
 |  |  +-BasicFetch [com.data.entity.VendorEntity.user.address]
 |  |  +-BasicFetch [com.data.entity.VendorEntity.user.createTime]
 |  |  +-BasicFetch [com.data.entity.VendorEntity.user.dob]
 |  |  +-BasicFetch [com.data.entity.VendorEntity.user.email]
 |  |  +-BasicFetch [com.data.entity.VendorEntity.user.enabled]
 |  |  +-BasicFetch [com.data.entity.VendorEntity.user.firstName]
 |  |  +-BasicFetch [com.data.entity.VendorEntity.user.lastName]
 |  |  +-BasicFetch [com.data.entity.VendorEntity.user.password]
 |  |  +-BasicFetch [com.data.entity.VendorEntity.user.phoneNumber]
 |  |  +-EagerCollectionFetch [com.data.entity.VendorEntity.user.roles]
 |  |  |  \-EntityFetchJoinedImpl [com.data.entity.VendorEntity.user.roles.{element}]
 |  |  |  |  \-BasicFetch [com.data.entity.VendorEntity.user.roles.{element}.name]
 |  |  +-BasicFetch [com.data.entity.VendorEntity.user.tempPasswordExpiry]
 |  |  \-BasicFetch [com.data.entity.VendorEntity.user.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ve1 : com.data.entity.VendorEntity) {
          primaryTableReference : vendors as ve1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : com.data.entity.VendorEntity.user) {
              primaryTableReference : users as u1_0
              TableGroupJoins {
                left  join CollectionTableGroup (r1 : com.data.entity.VendorEntity.user.roles) {
                  primaryTableReference : user_roles as r1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (r1 : com.data.entity.VendorEntity.user.roles.{element}) {
                      primaryTableReference : roles as r1_1
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.VendorEntity
2025-05-27 22:59:30 -  Version select: select id from vendors where id=?
2025-05-27 22:59:30 -  Insert (0): insert into vendors (create_time,enabled,trade_license_number,update_time,user_id) values (?,?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update vendors set enabled=?,trade_license_number=?,update_time=?,user_id=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from vendors where id=?
2025-05-27 22:59:30 - Created new SQL alias : tde1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.TestDriveEntity)] with identifierForTableGroup [com.data.entity.TestDriveEntity] for NavigablePath [com.data.entity.TestDriveEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@359fd0a2] with identifierForTableGroup [com.data.entity.TestDriveEntity.car] for NavigablePath [com.data.entity.TestDriveEntity.car]
2025-05-27 22:59:30 - Created new SQL alias : c1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30b075b9] with identifierForTableGroup [com.data.entity.TestDriveEntity.car.vendor] for NavigablePath [com.data.entity.TestDriveEntity.car.vendor]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@510e0dd2] with identifierForTableGroup [com.data.entity.TestDriveEntity.user] for NavigablePath [com.data.entity.TestDriveEntity.user]
2025-05-27 22:59:30 - Created new SQL alias : u1_0
2025-05-27 22:59:30 - Created new SQL alias : r1_0
2025-05-27 22:59:30 - Registration of TableGroup [CollectionTableGroup(com.data.entity.TestDriveEntity.user.roles)] with identifierForTableGroup [com.data.entity.TestDriveEntity.user.roles] for NavigablePath [com.data.entity.TestDriveEntity.user.roles]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54a98358] with identifierForTableGroup [com.data.entity.TestDriveEntity.user.roles.{element}] for NavigablePath [com.data.entity.TestDriveEntity.user.roles.{element}]
2025-05-27 22:59:30 - Created new SQL alias : r1_1
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.TestDriveEntity]
 |  +-EntityFetchJoinedImpl [com.data.entity.TestDriveEntity.car]
 |  |  +-EntityFetchSelectImpl [com.data.entity.TestDriveEntity.car.address]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.condition]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.createTime]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.description]
 |  |  +-EntityFetchSelectImpl [com.data.entity.TestDriveEntity.car.features]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.make]
 |  |  +-EntityFetchSelectImpl [com.data.entity.TestDriveEntity.car.media]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.model]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.priceLabel]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.regularPrice]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.requestPrice]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.salePrice]
 |  |  +-EntityFetchSelectImpl [com.data.entity.TestDriveEntity.car.specifications]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.status]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.stockNumber]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.title]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.type]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.updateTime]
 |  |  +-EntityDelayedFetchImpl [com.data.entity.TestDriveEntity.car.vendor]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.car.vinNumber]
 |  |  \-BasicFetch [com.data.entity.TestDriveEntity.car.year]
 |  +-BasicFetch [com.data.entity.TestDriveEntity.createTime]
 |  +-BasicFetch [com.data.entity.TestDriveEntity.drivingLicenseNumber]
 |  +-BasicFetch [com.data.entity.TestDriveEntity.status]
 |  +-BasicFetch [com.data.entity.TestDriveEntity.updateTime]
 |  \-EntityFetchJoinedImpl [com.data.entity.TestDriveEntity.user]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.user.address]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.user.createTime]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.user.dob]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.user.email]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.user.enabled]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.user.firstName]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.user.lastName]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.user.password]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.user.phoneNumber]
 |  |  +-EagerCollectionFetch [com.data.entity.TestDriveEntity.user.roles]
 |  |  |  \-EntityFetchJoinedImpl [com.data.entity.TestDriveEntity.user.roles.{element}]
 |  |  |  |  \-BasicFetch [com.data.entity.TestDriveEntity.user.roles.{element}.name]
 |  |  +-BasicFetch [com.data.entity.TestDriveEntity.user.tempPasswordExpiry]
 |  |  \-BasicFetch [com.data.entity.TestDriveEntity.user.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (tde1 : com.data.entity.TestDriveEntity) {
          primaryTableReference : test_drive as tde1_0
          TableGroupJoins {
             join LazyTableGroup (c1 : com.data.entity.TestDriveEntity.car) {
              primaryTableReference : cars as c1_0
              TableGroupJoins {
                left  join LazyTableGroup (v1 : com.data.entity.TestDriveEntity.car.vendor) {
                }
              }
            }
             join LazyTableGroup (u1 : com.data.entity.TestDriveEntity.user) {
              primaryTableReference : users as u1_0
              TableGroupJoins {
                left  join CollectionTableGroup (r1 : com.data.entity.TestDriveEntity.user.roles) {
                  primaryTableReference : user_roles as r1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (r1 : com.data.entity.TestDriveEntity.user.roles.{element}) {
                      primaryTableReference : roles as r1_1
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.TestDriveEntity
2025-05-27 22:59:30 -  Version select: select id from test_drive where id=?
2025-05-27 22:59:30 -  Insert (0): insert into test_drive (car_id,create_time,driving_license_number,status,update_time,user_id) values (?,?,?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update test_drive set car_id=?,create_time=?,driving_license_number=?,status=?,update_time=?,user_id=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from test_drive where id=?
2025-05-27 22:59:30 - Created new SQL alias : pce1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.PurchasedCarEntity)] with identifierForTableGroup [com.data.entity.PurchasedCarEntity] for NavigablePath [com.data.entity.PurchasedCarEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c56e044] with identifierForTableGroup [com.data.entity.PurchasedCarEntity.user] for NavigablePath [com.data.entity.PurchasedCarEntity.user]
2025-05-27 22:59:30 - Created new SQL alias : u1_0
2025-05-27 22:59:30 - Created new SQL alias : r1_0
2025-05-27 22:59:30 - Registration of TableGroup [CollectionTableGroup(com.data.entity.PurchasedCarEntity.user.roles)] with identifierForTableGroup [com.data.entity.PurchasedCarEntity.user.roles] for NavigablePath [com.data.entity.PurchasedCarEntity.user.roles]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d970881] with identifierForTableGroup [com.data.entity.PurchasedCarEntity.user.roles.{element}] for NavigablePath [com.data.entity.PurchasedCarEntity.user.roles.{element}]
2025-05-27 22:59:30 - Created new SQL alias : r1_1
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.PurchasedCarEntity]
 |  +-BasicFetch [com.data.entity.PurchasedCarEntity.carModel]
 |  +-BasicFetch [com.data.entity.PurchasedCarEntity.price]
 |  +-BasicFetch [com.data.entity.PurchasedCarEntity.purchaseDate]
 |  \-EntityFetchJoinedImpl [com.data.entity.PurchasedCarEntity.user]
 |  |  +-BasicFetch [com.data.entity.PurchasedCarEntity.user.address]
 |  |  +-BasicFetch [com.data.entity.PurchasedCarEntity.user.createTime]
 |  |  +-BasicFetch [com.data.entity.PurchasedCarEntity.user.dob]
 |  |  +-BasicFetch [com.data.entity.PurchasedCarEntity.user.email]
 |  |  +-BasicFetch [com.data.entity.PurchasedCarEntity.user.enabled]
 |  |  +-BasicFetch [com.data.entity.PurchasedCarEntity.user.firstName]
 |  |  +-BasicFetch [com.data.entity.PurchasedCarEntity.user.lastName]
 |  |  +-BasicFetch [com.data.entity.PurchasedCarEntity.user.password]
 |  |  +-BasicFetch [com.data.entity.PurchasedCarEntity.user.phoneNumber]
 |  |  +-EagerCollectionFetch [com.data.entity.PurchasedCarEntity.user.roles]
 |  |  |  \-EntityFetchJoinedImpl [com.data.entity.PurchasedCarEntity.user.roles.{element}]
 |  |  |  |  \-BasicFetch [com.data.entity.PurchasedCarEntity.user.roles.{element}.name]
 |  |  +-BasicFetch [com.data.entity.PurchasedCarEntity.user.tempPasswordExpiry]
 |  |  \-BasicFetch [com.data.entity.PurchasedCarEntity.user.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (pce1 : com.data.entity.PurchasedCarEntity) {
          primaryTableReference : purchased_cars as pce1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.data.entity.PurchasedCarEntity.user) {
              primaryTableReference : users as u1_0
              TableGroupJoins {
                left  join CollectionTableGroup (r1 : com.data.entity.PurchasedCarEntity.user.roles) {
                  primaryTableReference : user_roles as r1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (r1 : com.data.entity.PurchasedCarEntity.user.roles.{element}) {
                      primaryTableReference : roles as r1_1
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.PurchasedCarEntity
2025-05-27 22:59:30 -  Version select: select id from purchased_cars where id=?
2025-05-27 22:59:30 -  Insert (0): insert into purchased_cars (car_model,price,purchase_date,user_email) values (?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update purchased_cars set car_model=?,price=?,purchase_date=?,user_email=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from purchased_cars where id=?
2025-05-27 22:59:30 - Created new SQL alias : we1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.WishlistEntity)] with identifierForTableGroup [com.data.entity.WishlistEntity] for NavigablePath [com.data.entity.WishlistEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4884350b] with identifierForTableGroup [com.data.entity.WishlistEntity.car] for NavigablePath [com.data.entity.WishlistEntity.car]
2025-05-27 22:59:30 - Created new SQL alias : c1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@53cba89f] with identifierForTableGroup [com.data.entity.WishlistEntity.car.vendor] for NavigablePath [com.data.entity.WishlistEntity.car.vendor]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@66ad7167] with identifierForTableGroup [com.data.entity.WishlistEntity.user] for NavigablePath [com.data.entity.WishlistEntity.user]
2025-05-27 22:59:30 - Created new SQL alias : u1_0
2025-05-27 22:59:30 - Created new SQL alias : r1_0
2025-05-27 22:59:30 - Registration of TableGroup [CollectionTableGroup(com.data.entity.WishlistEntity.user.roles)] with identifierForTableGroup [com.data.entity.WishlistEntity.user.roles] for NavigablePath [com.data.entity.WishlistEntity.user.roles]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@14aa2123] with identifierForTableGroup [com.data.entity.WishlistEntity.user.roles.{element}] for NavigablePath [com.data.entity.WishlistEntity.user.roles.{element}]
2025-05-27 22:59:30 - Created new SQL alias : r1_1
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.WishlistEntity]
 |  +-EntityFetchJoinedImpl [com.data.entity.WishlistEntity.car]
 |  |  +-EntityFetchSelectImpl [com.data.entity.WishlistEntity.car.address]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.condition]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.createTime]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.description]
 |  |  +-EntityFetchSelectImpl [com.data.entity.WishlistEntity.car.features]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.make]
 |  |  +-EntityFetchSelectImpl [com.data.entity.WishlistEntity.car.media]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.model]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.priceLabel]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.regularPrice]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.requestPrice]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.salePrice]
 |  |  +-EntityFetchSelectImpl [com.data.entity.WishlistEntity.car.specifications]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.status]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.stockNumber]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.title]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.type]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.updateTime]
 |  |  +-EntityDelayedFetchImpl [com.data.entity.WishlistEntity.car.vendor]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.car.vinNumber]
 |  |  \-BasicFetch [com.data.entity.WishlistEntity.car.year]
 |  \-EntityFetchJoinedImpl [com.data.entity.WishlistEntity.user]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.user.address]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.user.createTime]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.user.dob]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.user.email]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.user.enabled]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.user.firstName]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.user.lastName]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.user.password]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.user.phoneNumber]
 |  |  +-EagerCollectionFetch [com.data.entity.WishlistEntity.user.roles]
 |  |  |  \-EntityFetchJoinedImpl [com.data.entity.WishlistEntity.user.roles.{element}]
 |  |  |  |  \-BasicFetch [com.data.entity.WishlistEntity.user.roles.{element}.name]
 |  |  +-BasicFetch [com.data.entity.WishlistEntity.user.tempPasswordExpiry]
 |  |  \-BasicFetch [com.data.entity.WishlistEntity.user.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (we1 : com.data.entity.WishlistEntity) {
          primaryTableReference : wishlist as we1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : com.data.entity.WishlistEntity.car) {
              primaryTableReference : cars as c1_0
              TableGroupJoins {
                left  join LazyTableGroup (v1 : com.data.entity.WishlistEntity.car.vendor) {
                }
              }
            }
            left  join LazyTableGroup (u1 : com.data.entity.WishlistEntity.user) {
              primaryTableReference : users as u1_0
              TableGroupJoins {
                left  join CollectionTableGroup (r1 : com.data.entity.WishlistEntity.user.roles) {
                  primaryTableReference : user_roles as r1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (r1 : com.data.entity.WishlistEntity.user.roles.{element}) {
                      primaryTableReference : roles as r1_1
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.WishlistEntity
2025-05-27 22:59:30 -  Version select: select id from wishlist where id=?
2025-05-27 22:59:30 -  Insert (0): insert into wishlist (car_id,user_email) values (?,?)
2025-05-27 22:59:30 -  Update (0): update wishlist set car_id=?,user_email=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from wishlist where id=?
2025-05-27 22:59:30 - Created new SQL alias : ce1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.CommissionEntity)] with identifierForTableGroup [com.data.entity.CommissionEntity] for NavigablePath [com.data.entity.CommissionEntity]
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.CommissionEntity]
 |  +-BasicFetch [com.data.entity.CommissionEntity.carCategory]
 |  +-BasicFetch [com.data.entity.CommissionEntity.isPercentage]
 |  \-BasicFetch [com.data.entity.CommissionEntity.value]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ce1 : com.data.entity.CommissionEntity) {
          primaryTableReference : commissions as ce1_0
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.CommissionEntity
2025-05-27 22:59:30 -  Version select: select id from commissions where id=?
2025-05-27 22:59:30 -  Insert (0): insert into commissions (car_category,is_percentage,value) values (?,?,?)
2025-05-27 22:59:30 -  Update (0): update commissions set car_category=?,is_percentage=?,value=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from commissions where id=?
2025-05-27 22:59:30 - Created new SQL alias : ce1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.ContactEntity)] with identifierForTableGroup [com.data.entity.ContactEntity] for NavigablePath [com.data.entity.ContactEntity]
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.ContactEntity]
 |  +-BasicFetch [com.data.entity.ContactEntity.createTime]
 |  +-BasicFetch [com.data.entity.ContactEntity.email]
 |  +-BasicFetch [com.data.entity.ContactEntity.message]
 |  +-BasicFetch [com.data.entity.ContactEntity.name]
 |  +-BasicFetch [com.data.entity.ContactEntity.phone]
 |  \-BasicFetch [com.data.entity.ContactEntity.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ce1 : com.data.entity.ContactEntity) {
          primaryTableReference : contact_us as ce1_0
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.ContactEntity
2025-05-27 22:59:30 -  Version select: select id from contact_us where id=?
2025-05-27 22:59:30 -  Insert (0): insert into contact_us (create_time,email,message,name,phone,update_time) values (?,?,?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update contact_us set email=?,message=?,name=?,phone=?,update_time=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from contact_us where id=?
2025-05-27 22:59:30 - Created new SQL alias : ce1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.CarEntity)] with identifierForTableGroup [com.data.entity.CarEntity] for NavigablePath [com.data.entity.CarEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3b235623] with identifierForTableGroup [com.data.entity.CarEntity.vendor] for NavigablePath [com.data.entity.CarEntity.vendor]
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.CarEntity]
 |  +-EntityFetchSelectImpl [com.data.entity.CarEntity.address]
 |  +-BasicFetch [com.data.entity.CarEntity.condition]
 |  +-BasicFetch [com.data.entity.CarEntity.createTime]
 |  +-BasicFetch [com.data.entity.CarEntity.description]
 |  +-EntityFetchSelectImpl [com.data.entity.CarEntity.features]
 |  +-BasicFetch [com.data.entity.CarEntity.make]
 |  +-EntityFetchSelectImpl [com.data.entity.CarEntity.media]
 |  +-BasicFetch [com.data.entity.CarEntity.model]
 |  +-BasicFetch [com.data.entity.CarEntity.priceLabel]
 |  +-BasicFetch [com.data.entity.CarEntity.regularPrice]
 |  +-BasicFetch [com.data.entity.CarEntity.requestPrice]
 |  +-BasicFetch [com.data.entity.CarEntity.salePrice]
 |  +-EntityFetchSelectImpl [com.data.entity.CarEntity.specifications]
 |  +-BasicFetch [com.data.entity.CarEntity.status]
 |  +-BasicFetch [com.data.entity.CarEntity.stockNumber]
 |  +-BasicFetch [com.data.entity.CarEntity.title]
 |  +-BasicFetch [com.data.entity.CarEntity.type]
 |  +-BasicFetch [com.data.entity.CarEntity.updateTime]
 |  +-EntityDelayedFetchImpl [com.data.entity.CarEntity.vendor]
 |  +-BasicFetch [com.data.entity.CarEntity.vinNumber]
 |  \-BasicFetch [com.data.entity.CarEntity.year]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ce1 : com.data.entity.CarEntity) {
          primaryTableReference : cars as ce1_0
          TableGroupJoins {
            left  join LazyTableGroup (v1 : com.data.entity.CarEntity.vendor) {
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.CarEntity
2025-05-27 22:59:30 -  Version select: select id from cars where id=?
2025-05-27 22:59:30 -  Insert (0): insert into cars (car_condition,create_time,description,make,model,price_label,regular_price,request_price,sale_price,status,stock_number,title,type,update_time,vendor_id,vin_number,year) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update cars set car_condition=?,description=?,make=?,model=?,price_label=?,regular_price=?,request_price=?,sale_price=?,status=?,stock_number=?,title=?,type=?,update_time=?,vendor_id=?,vin_number=?,year=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from cars where id=?
2025-05-27 22:59:30 - Created new SQL alias : moe1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.MakeOfferEntity)] with identifierForTableGroup [com.data.entity.MakeOfferEntity] for NavigablePath [com.data.entity.MakeOfferEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3b2114ce] with identifierForTableGroup [com.data.entity.MakeOfferEntity.car] for NavigablePath [com.data.entity.MakeOfferEntity.car]
2025-05-27 22:59:30 - Created new SQL alias : c1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6bab8290] with identifierForTableGroup [com.data.entity.MakeOfferEntity.car.vendor] for NavigablePath [com.data.entity.MakeOfferEntity.car.vendor]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4a985388] with identifierForTableGroup [com.data.entity.MakeOfferEntity.user] for NavigablePath [com.data.entity.MakeOfferEntity.user]
2025-05-27 22:59:30 - Created new SQL alias : u1_0
2025-05-27 22:59:30 - Created new SQL alias : r1_0
2025-05-27 22:59:30 - Registration of TableGroup [CollectionTableGroup(com.data.entity.MakeOfferEntity.user.roles)] with identifierForTableGroup [com.data.entity.MakeOfferEntity.user.roles] for NavigablePath [com.data.entity.MakeOfferEntity.user.roles]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@15c8b75c] with identifierForTableGroup [com.data.entity.MakeOfferEntity.user.roles.{element}] for NavigablePath [com.data.entity.MakeOfferEntity.user.roles.{element}]
2025-05-27 22:59:30 - Created new SQL alias : r1_1
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.MakeOfferEntity]
 |  +-EntityFetchJoinedImpl [com.data.entity.MakeOfferEntity.car]
 |  |  +-EntityFetchSelectImpl [com.data.entity.MakeOfferEntity.car.address]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.condition]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.createTime]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.description]
 |  |  +-EntityFetchSelectImpl [com.data.entity.MakeOfferEntity.car.features]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.make]
 |  |  +-EntityFetchSelectImpl [com.data.entity.MakeOfferEntity.car.media]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.model]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.priceLabel]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.regularPrice]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.requestPrice]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.salePrice]
 |  |  +-EntityFetchSelectImpl [com.data.entity.MakeOfferEntity.car.specifications]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.status]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.stockNumber]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.title]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.type]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.updateTime]
 |  |  +-EntityDelayedFetchImpl [com.data.entity.MakeOfferEntity.car.vendor]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.car.vinNumber]
 |  |  \-BasicFetch [com.data.entity.MakeOfferEntity.car.year]
 |  +-BasicFetch [com.data.entity.MakeOfferEntity.createTime]
 |  +-BasicFetch [com.data.entity.MakeOfferEntity.drivingLicenseNumber]
 |  +-BasicFetch [com.data.entity.MakeOfferEntity.finalOfferedPrice]
 |  +-BasicFetch [com.data.entity.MakeOfferEntity.offeredPrice]
 |  +-BasicFetch [com.data.entity.MakeOfferEntity.status]
 |  +-BasicFetch [com.data.entity.MakeOfferEntity.updateTime]
 |  \-EntityFetchJoinedImpl [com.data.entity.MakeOfferEntity.user]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.user.address]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.user.createTime]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.user.dob]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.user.email]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.user.enabled]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.user.firstName]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.user.lastName]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.user.password]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.user.phoneNumber]
 |  |  +-EagerCollectionFetch [com.data.entity.MakeOfferEntity.user.roles]
 |  |  |  \-EntityFetchJoinedImpl [com.data.entity.MakeOfferEntity.user.roles.{element}]
 |  |  |  |  \-BasicFetch [com.data.entity.MakeOfferEntity.user.roles.{element}.name]
 |  |  +-BasicFetch [com.data.entity.MakeOfferEntity.user.tempPasswordExpiry]
 |  |  \-BasicFetch [com.data.entity.MakeOfferEntity.user.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (moe1 : com.data.entity.MakeOfferEntity) {
          primaryTableReference : make_offer as moe1_0
          TableGroupJoins {
             join LazyTableGroup (c1 : com.data.entity.MakeOfferEntity.car) {
              primaryTableReference : cars as c1_0
              TableGroupJoins {
                left  join LazyTableGroup (v1 : com.data.entity.MakeOfferEntity.car.vendor) {
                }
              }
            }
             join LazyTableGroup (u1 : com.data.entity.MakeOfferEntity.user) {
              primaryTableReference : users as u1_0
              TableGroupJoins {
                left  join CollectionTableGroup (r1 : com.data.entity.MakeOfferEntity.user.roles) {
                  primaryTableReference : user_roles as r1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (r1 : com.data.entity.MakeOfferEntity.user.roles.{element}) {
                      primaryTableReference : roles as r1_1
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.MakeOfferEntity
2025-05-27 22:59:30 -  Version select: select id from make_offer where id=?
2025-05-27 22:59:30 -  Insert (0): insert into make_offer (car_id,create_time,driving_license_number,final_offered_price,offered_price,status,update_time,user_id) values (?,?,?,?,?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update make_offer set car_id=?,create_time=?,driving_license_number=?,final_offered_price=?,offered_price=?,status=?,update_time=?,user_id=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from make_offer where id=?
2025-05-27 22:59:30 - Created new SQL alias : pe1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.PaymentEntity)] with identifierForTableGroup [com.data.entity.PaymentEntity] for NavigablePath [com.data.entity.PaymentEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1174ff02] with identifierForTableGroup [com.data.entity.PaymentEntity.vendor] for NavigablePath [com.data.entity.PaymentEntity.vendor]
2025-05-27 22:59:30 - Created new SQL alias : v1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1978eab7] with identifierForTableGroup [com.data.entity.PaymentEntity.vendor.user] for NavigablePath [com.data.entity.PaymentEntity.vendor.user]
2025-05-27 22:59:30 - Created new SQL alias : u1_0
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.PaymentEntity]
 |  +-BasicFetch [com.data.entity.PaymentEntity.amount]
 |  +-BasicFetch [com.data.entity.PaymentEntity.createTime]
 |  +-BasicFetch [com.data.entity.PaymentEntity.paymentDate]
 |  +-BasicFetch [com.data.entity.PaymentEntity.status]
 |  +-BasicFetch [com.data.entity.PaymentEntity.updateTime]
 |  \-EntityFetchJoinedImpl [com.data.entity.PaymentEntity.vendor]
 |  |  +-DelayedCollectionFetch [com.data.entity.PaymentEntity.vendor.cars]
 |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.createTime]
 |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.enabled]
 |  |  +-DelayedCollectionFetch [com.data.entity.PaymentEntity.vendor.payments]
 |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.tradeLicenseNumber]
 |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.updateTime]
 |  |  \-EntityFetchJoinedImpl [com.data.entity.PaymentEntity.vendor.user]
 |  |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.user.address]
 |  |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.user.createTime]
 |  |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.user.dob]
 |  |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.user.email]
 |  |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.user.enabled]
 |  |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.user.firstName]
 |  |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.user.lastName]
 |  |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.user.password]
 |  |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.user.phoneNumber]
 |  |  |  +-SelectEagerCollectionFetch [com.data.entity.PaymentEntity.vendor.user.roles]
 |  |  |  +-BasicFetch [com.data.entity.PaymentEntity.vendor.user.tempPasswordExpiry]
 |  |  |  \-BasicFetch [com.data.entity.PaymentEntity.vendor.user.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (pe1 : com.data.entity.PaymentEntity) {
          primaryTableReference : payments as pe1_0
          TableGroupJoins {
             join LazyTableGroup (v1 : com.data.entity.PaymentEntity.vendor) {
              primaryTableReference : vendors as v1_0
              TableGroupJoins {
                 join LazyTableGroup (u1 : com.data.entity.PaymentEntity.vendor.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.PaymentEntity
2025-05-27 22:59:30 -  Version select: select id from payments where id=?
2025-05-27 22:59:30 -  Insert (0): insert into payments (amount,create_time,payment_date,status,update_time,vendor_id) values (?,?,?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update payments set amount=?,payment_date=?,status=?,update_time=?,vendor_id=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from payments where id=?
2025-05-27 22:59:30 - Created new SQL alias : cme1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.CarMediaEntity)] with identifierForTableGroup [com.data.entity.CarMediaEntity] for NavigablePath [com.data.entity.CarMediaEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ab8c972] with identifierForTableGroup [com.data.entity.CarMediaEntity.car] for NavigablePath [com.data.entity.CarMediaEntity.car]
2025-05-27 22:59:30 - Created new SQL alias : c1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76cad511] with identifierForTableGroup [com.data.entity.CarMediaEntity.car.vendor] for NavigablePath [com.data.entity.CarMediaEntity.car.vendor]
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.CarMediaEntity]
 |  +-EntityFetchJoinedImpl [com.data.entity.CarMediaEntity.car]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarMediaEntity.car.address]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.condition]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.createTime]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.description]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarMediaEntity.car.features]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.make]
 |  |  +-CircularBiDirectionalFetchImpl [com.data.entity.CarMediaEntity.car.media]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.model]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.priceLabel]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.regularPrice]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.requestPrice]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.salePrice]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarMediaEntity.car.specifications]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.status]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.stockNumber]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.title]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.type]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.updateTime]
 |  |  +-EntityDelayedFetchImpl [com.data.entity.CarMediaEntity.car.vendor]
 |  |  +-BasicFetch [com.data.entity.CarMediaEntity.car.vinNumber]
 |  |  \-BasicFetch [com.data.entity.CarMediaEntity.car.year]
 |  +-BasicFetch [com.data.entity.CarMediaEntity.photo1]
 |  +-BasicFetch [com.data.entity.CarMediaEntity.photo2]
 |  +-BasicFetch [com.data.entity.CarMediaEntity.photo3]
 |  +-BasicFetch [com.data.entity.CarMediaEntity.photo4]
 |  +-BasicFetch [com.data.entity.CarMediaEntity.photo5]
 |  +-BasicFetch [com.data.entity.CarMediaEntity.photo6]
 |  +-BasicFetch [com.data.entity.CarMediaEntity.videoUrl]
 |  \-BasicFetch [com.data.entity.CarMediaEntity.vinReport]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (cme1 : com.data.entity.CarMediaEntity) {
          primaryTableReference : car_media as cme1_0
          TableGroupJoins {
             join LazyTableGroup (c1 : com.data.entity.CarMediaEntity.car) {
              primaryTableReference : cars as c1_0
              TableGroupJoins {
                left  join LazyTableGroup (v1 : com.data.entity.CarMediaEntity.car.vendor) {
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.CarMediaEntity
2025-05-27 22:59:30 -  Version select: select id from car_media where id=?
2025-05-27 22:59:30 -  Insert (0): insert into car_media (car_id,photo1,photo2,photo3,photo4,photo5,photo6,video_url,vin_report) values (?,?,?,?,?,?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update car_media set car_id=?,photo1=?,photo2=?,photo3=?,photo4=?,photo5=?,photo6=?,video_url=?,vin_report=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from car_media where id=?
2025-05-27 22:59:30 - Created new SQL alias : a1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.Appointment)] with identifierForTableGroup [com.data.entity.Appointment] for NavigablePath [com.data.entity.Appointment]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@f776b4a] with identifierForTableGroup [com.data.entity.Appointment.testDriveEntity] for NavigablePath [com.data.entity.Appointment.testDriveEntity]
2025-05-27 22:59:30 - Created new SQL alias : tde1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2fb555e8] with identifierForTableGroup [com.data.entity.Appointment.testDriveEntity.car] for NavigablePath [com.data.entity.Appointment.testDriveEntity.car]
2025-05-27 22:59:30 - Created new SQL alias : c1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@19a544cd] with identifierForTableGroup [com.data.entity.Appointment.testDriveEntity.car.vendor] for NavigablePath [com.data.entity.Appointment.testDriveEntity.car.vendor]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c502018] with identifierForTableGroup [com.data.entity.Appointment.testDriveEntity.user] for NavigablePath [com.data.entity.Appointment.testDriveEntity.user]
2025-05-27 22:59:30 - Created new SQL alias : u1_0
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.Appointment]
 |  +-BasicFetch [com.data.entity.Appointment.appointmentDate]
 |  +-BasicFetch [com.data.entity.Appointment.carModel]
 |  \-EntityFetchJoinedImpl [com.data.entity.Appointment.testDriveEntity]
 |  |  +-EntityFetchJoinedImpl [com.data.entity.Appointment.testDriveEntity.car]
 |  |  |  +-EntityFetchSelectImpl [com.data.entity.Appointment.testDriveEntity.car.address]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.condition]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.createTime]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.description]
 |  |  |  +-EntityFetchSelectImpl [com.data.entity.Appointment.testDriveEntity.car.features]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.make]
 |  |  |  +-EntityFetchSelectImpl [com.data.entity.Appointment.testDriveEntity.car.media]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.model]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.priceLabel]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.regularPrice]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.requestPrice]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.salePrice]
 |  |  |  +-EntityFetchSelectImpl [com.data.entity.Appointment.testDriveEntity.car.specifications]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.status]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.stockNumber]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.title]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.type]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.updateTime]
 |  |  |  +-EntityDelayedFetchImpl [com.data.entity.Appointment.testDriveEntity.car.vendor]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.vinNumber]
 |  |  |  \-BasicFetch [com.data.entity.Appointment.testDriveEntity.car.year]
 |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.createTime]
 |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.drivingLicenseNumber]
 |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.status]
 |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.updateTime]
 |  |  \-EntityFetchJoinedImpl [com.data.entity.Appointment.testDriveEntity.user]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.address]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.createTime]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.dob]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.email]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.enabled]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.firstName]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.lastName]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.password]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.phoneNumber]
 |  |  |  +-SelectEagerCollectionFetch [com.data.entity.Appointment.testDriveEntity.user.roles]
 |  |  |  +-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.tempPasswordExpiry]
 |  |  |  \-BasicFetch [com.data.entity.Appointment.testDriveEntity.user.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : com.data.entity.Appointment) {
          primaryTableReference : appointments as a1_0
          TableGroupJoins {
             join LazyTableGroup (tde1 : com.data.entity.Appointment.testDriveEntity) {
              primaryTableReference : test_drive as tde1_0
              TableGroupJoins {
                 join LazyTableGroup (c1 : com.data.entity.Appointment.testDriveEntity.car) {
                  primaryTableReference : cars as c1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (v1 : com.data.entity.Appointment.testDriveEntity.car.vendor) {
                    }
                  }
                }
                 join LazyTableGroup (u1 : com.data.entity.Appointment.testDriveEntity.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.Appointment
2025-05-27 22:59:30 -  Version select: select id from appointments where id=?
2025-05-27 22:59:30 -  Insert (0): insert into appointments (appointment_date,car_model,test_drive_id) values (?,?,?)
2025-05-27 22:59:30 -  Update (0): update appointments set appointment_date=?,car_model=?,test_drive_id=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from appointments where id=?
2025-05-27 22:59:30 - Created new SQL alias : uhe1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.UserHistoryEntity)] with identifierForTableGroup [com.data.entity.UserHistoryEntity] for NavigablePath [com.data.entity.UserHistoryEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5dd62f07] with identifierForTableGroup [com.data.entity.UserHistoryEntity.car] for NavigablePath [com.data.entity.UserHistoryEntity.car]
2025-05-27 22:59:30 - Created new SQL alias : c1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6e669b5c] with identifierForTableGroup [com.data.entity.UserHistoryEntity.car.vendor] for NavigablePath [com.data.entity.UserHistoryEntity.car.vendor]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3db3668] with identifierForTableGroup [com.data.entity.UserHistoryEntity.user] for NavigablePath [com.data.entity.UserHistoryEntity.user]
2025-05-27 22:59:30 - Created new SQL alias : u1_0
2025-05-27 22:59:30 - Created new SQL alias : r1_0
2025-05-27 22:59:30 - Registration of TableGroup [CollectionTableGroup(com.data.entity.UserHistoryEntity.user.roles)] with identifierForTableGroup [com.data.entity.UserHistoryEntity.user.roles] for NavigablePath [com.data.entity.UserHistoryEntity.user.roles]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@125c03d3] with identifierForTableGroup [com.data.entity.UserHistoryEntity.user.roles.{element}] for NavigablePath [com.data.entity.UserHistoryEntity.user.roles.{element}]
2025-05-27 22:59:30 - Created new SQL alias : r1_1
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.UserHistoryEntity]
 |  +-EntityFetchJoinedImpl [com.data.entity.UserHistoryEntity.car]
 |  |  +-EntityFetchSelectImpl [com.data.entity.UserHistoryEntity.car.address]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.condition]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.createTime]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.description]
 |  |  +-EntityFetchSelectImpl [com.data.entity.UserHistoryEntity.car.features]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.make]
 |  |  +-EntityFetchSelectImpl [com.data.entity.UserHistoryEntity.car.media]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.model]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.priceLabel]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.regularPrice]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.requestPrice]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.salePrice]
 |  |  +-EntityFetchSelectImpl [com.data.entity.UserHistoryEntity.car.specifications]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.status]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.stockNumber]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.title]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.type]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.updateTime]
 |  |  +-EntityDelayedFetchImpl [com.data.entity.UserHistoryEntity.car.vendor]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.car.vinNumber]
 |  |  \-BasicFetch [com.data.entity.UserHistoryEntity.car.year]
 |  +-BasicFetch [com.data.entity.UserHistoryEntity.date]
 |  +-BasicFetch [com.data.entity.UserHistoryEntity.historyType]
 |  \-EntityFetchJoinedImpl [com.data.entity.UserHistoryEntity.user]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.user.address]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.user.createTime]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.user.dob]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.user.email]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.user.enabled]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.user.firstName]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.user.lastName]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.user.password]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.user.phoneNumber]
 |  |  +-EagerCollectionFetch [com.data.entity.UserHistoryEntity.user.roles]
 |  |  |  \-EntityFetchJoinedImpl [com.data.entity.UserHistoryEntity.user.roles.{element}]
 |  |  |  |  \-BasicFetch [com.data.entity.UserHistoryEntity.user.roles.{element}.name]
 |  |  +-BasicFetch [com.data.entity.UserHistoryEntity.user.tempPasswordExpiry]
 |  |  \-BasicFetch [com.data.entity.UserHistoryEntity.user.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (uhe1 : com.data.entity.UserHistoryEntity) {
          primaryTableReference : user_history as uhe1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : com.data.entity.UserHistoryEntity.car) {
              primaryTableReference : cars as c1_0
              TableGroupJoins {
                left  join LazyTableGroup (v1 : com.data.entity.UserHistoryEntity.car.vendor) {
                }
              }
            }
            left  join LazyTableGroup (u1 : com.data.entity.UserHistoryEntity.user) {
              primaryTableReference : users as u1_0
              TableGroupJoins {
                left  join CollectionTableGroup (r1 : com.data.entity.UserHistoryEntity.user.roles) {
                  primaryTableReference : user_roles as r1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (r1 : com.data.entity.UserHistoryEntity.user.roles.{element}) {
                      primaryTableReference : roles as r1_1
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.UserHistoryEntity
2025-05-27 22:59:30 -  Version select: select id from user_history where id=?
2025-05-27 22:59:30 -  Insert (0): insert into user_history (car_id,date,history_type,user_email) values (?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update user_history set car_id=?,date=?,history_type=?,user_email=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from user_history where id=?
2025-05-27 22:59:30 - Created new SQL alias : ae1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.AdminEntity)] with identifierForTableGroup [com.data.entity.AdminEntity] for NavigablePath [com.data.entity.AdminEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@24f8707c] with identifierForTableGroup [com.data.entity.AdminEntity.user] for NavigablePath [com.data.entity.AdminEntity.user]
2025-05-27 22:59:30 - Created new SQL alias : u1_0
2025-05-27 22:59:30 - Created new SQL alias : r1_0
2025-05-27 22:59:30 - Registration of TableGroup [CollectionTableGroup(com.data.entity.AdminEntity.user.roles)] with identifierForTableGroup [com.data.entity.AdminEntity.user.roles] for NavigablePath [com.data.entity.AdminEntity.user.roles]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e4a6afd] with identifierForTableGroup [com.data.entity.AdminEntity.user.roles.{element}] for NavigablePath [com.data.entity.AdminEntity.user.roles.{element}]
2025-05-27 22:59:30 - Created new SQL alias : r1_1
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.AdminEntity]
 |  +-BasicFetch [com.data.entity.AdminEntity.active]
 |  \-EntityFetchJoinedImpl [com.data.entity.AdminEntity.user]
 |  |  +-BasicFetch [com.data.entity.AdminEntity.user.address]
 |  |  +-BasicFetch [com.data.entity.AdminEntity.user.createTime]
 |  |  +-BasicFetch [com.data.entity.AdminEntity.user.dob]
 |  |  +-BasicFetch [com.data.entity.AdminEntity.user.email]
 |  |  +-BasicFetch [com.data.entity.AdminEntity.user.enabled]
 |  |  +-BasicFetch [com.data.entity.AdminEntity.user.firstName]
 |  |  +-BasicFetch [com.data.entity.AdminEntity.user.lastName]
 |  |  +-BasicFetch [com.data.entity.AdminEntity.user.password]
 |  |  +-BasicFetch [com.data.entity.AdminEntity.user.phoneNumber]
 |  |  +-EagerCollectionFetch [com.data.entity.AdminEntity.user.roles]
 |  |  |  \-EntityFetchJoinedImpl [com.data.entity.AdminEntity.user.roles.{element}]
 |  |  |  |  \-BasicFetch [com.data.entity.AdminEntity.user.roles.{element}.name]
 |  |  +-BasicFetch [com.data.entity.AdminEntity.user.tempPasswordExpiry]
 |  |  \-BasicFetch [com.data.entity.AdminEntity.user.updateTime]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (ae1 : com.data.entity.AdminEntity) {
          primaryTableReference : admins as ae1_0
          TableGroupJoins {
             join LazyTableGroup (u1 : com.data.entity.AdminEntity.user) {
              primaryTableReference : users as u1_0
              TableGroupJoins {
                left  join CollectionTableGroup (r1 : com.data.entity.AdminEntity.user.roles) {
                  primaryTableReference : user_roles as r1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (r1 : com.data.entity.AdminEntity.user.roles.{element}) {
                      primaryTableReference : roles as r1_1
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.AdminEntity
2025-05-27 22:59:30 -  Version select: select id from admins where id=?
2025-05-27 22:59:30 -  Insert (0): insert into admins (active,user_id) values (?,?)
2025-05-27 22:59:30 -  Update (0): update admins set active=?,user_id=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from admins where id=?
2025-05-27 22:59:30 - Created new SQL alias : cae1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.CarAddressEntity)] with identifierForTableGroup [com.data.entity.CarAddressEntity] for NavigablePath [com.data.entity.CarAddressEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7ab8f93] with identifierForTableGroup [com.data.entity.CarAddressEntity.car] for NavigablePath [com.data.entity.CarAddressEntity.car]
2025-05-27 22:59:30 - Created new SQL alias : c1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6037748a] with identifierForTableGroup [com.data.entity.CarAddressEntity.car.vendor] for NavigablePath [com.data.entity.CarAddressEntity.car.vendor]
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.CarAddressEntity]
 |  +-BasicFetch [com.data.entity.CarAddressEntity.address]
 |  +-EntityFetchJoinedImpl [com.data.entity.CarAddressEntity.car]
 |  |  +-CircularBiDirectionalFetchImpl [com.data.entity.CarAddressEntity.car.address]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.condition]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.createTime]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.description]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarAddressEntity.car.features]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.make]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarAddressEntity.car.media]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.model]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.priceLabel]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.regularPrice]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.requestPrice]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.salePrice]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarAddressEntity.car.specifications]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.status]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.stockNumber]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.title]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.type]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.updateTime]
 |  |  +-EntityDelayedFetchImpl [com.data.entity.CarAddressEntity.car.vendor]
 |  |  +-BasicFetch [com.data.entity.CarAddressEntity.car.vinNumber]
 |  |  \-BasicFetch [com.data.entity.CarAddressEntity.car.year]
 |  \-BasicFetch [com.data.entity.CarAddressEntity.mapLocation]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (cae1 : com.data.entity.CarAddressEntity) {
          primaryTableReference : car_address as cae1_0
          TableGroupJoins {
             join LazyTableGroup (c1 : com.data.entity.CarAddressEntity.car) {
              primaryTableReference : cars as c1_0
              TableGroupJoins {
                left  join LazyTableGroup (v1 : com.data.entity.CarAddressEntity.car.vendor) {
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.CarAddressEntity
2025-05-27 22:59:30 -  Version select: select id from car_address where id=?
2025-05-27 22:59:30 -  Insert (0): insert into car_address (address,car_id,map_location) values (?,?,?)
2025-05-27 22:59:30 -  Update (0): update car_address set address=?,car_id=?,map_location=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from car_address where id=?
2025-05-27 22:59:30 - Created new SQL alias : cse1_0
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.CarSpecificationsEntity)] with identifierForTableGroup [com.data.entity.CarSpecificationsEntity] for NavigablePath [com.data.entity.CarSpecificationsEntity]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@14c7ab73] with identifierForTableGroup [com.data.entity.CarSpecificationsEntity.car] for NavigablePath [com.data.entity.CarSpecificationsEntity.car]
2025-05-27 22:59:30 - Created new SQL alias : c1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fcb796f] with identifierForTableGroup [com.data.entity.CarSpecificationsEntity.car.vendor] for NavigablePath [com.data.entity.CarSpecificationsEntity.car.vendor]
2025-05-27 22:59:30 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.CarSpecificationsEntity]
 |  +-EntityFetchJoinedImpl [com.data.entity.CarSpecificationsEntity.car]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarSpecificationsEntity.car.address]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.condition]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.createTime]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.description]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarSpecificationsEntity.car.features]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.make]
 |  |  +-EntityFetchSelectImpl [com.data.entity.CarSpecificationsEntity.car.media]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.model]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.priceLabel]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.regularPrice]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.requestPrice]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.salePrice]
 |  |  +-CircularBiDirectionalFetchImpl [com.data.entity.CarSpecificationsEntity.car.specifications]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.status]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.stockNumber]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.title]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.type]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.updateTime]
 |  |  +-EntityDelayedFetchImpl [com.data.entity.CarSpecificationsEntity.car.vendor]
 |  |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.car.vinNumber]
 |  |  \-BasicFetch [com.data.entity.CarSpecificationsEntity.car.year]
 |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.cityMPG]
 |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.color]
 |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.cylinders]
 |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.doors]
 |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.driverType]
 |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.engineSize]
 |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.fuel]
 |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.highwayMPG]
 |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.mileage]
 |  +-BasicFetch [com.data.entity.CarSpecificationsEntity.seats]
 |  \-BasicFetch [com.data.entity.CarSpecificationsEntity.transmission]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (cse1 : com.data.entity.CarSpecificationsEntity) {
          primaryTableReference : car_specifications as cse1_0
          TableGroupJoins {
             join LazyTableGroup (c1 : com.data.entity.CarSpecificationsEntity.car) {
              primaryTableReference : cars as c1_0
              TableGroupJoins {
                left  join LazyTableGroup (v1 : com.data.entity.CarSpecificationsEntity.car.vendor) {
                }
              }
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for entity: com.data.entity.CarSpecificationsEntity
2025-05-27 22:59:30 -  Version select: select id from car_specifications where id=?
2025-05-27 22:59:30 -  Insert (0): insert into car_specifications (car_id,citympg,color,cylinders,doors,driver_type,engine_size,fuel,highwaympg,mileage,seats,transmission) values (?,?,?,?,?,?,?,?,?,?,?,?)
2025-05-27 22:59:30 -  Update (0): update car_specifications set car_id=?,citympg=?,color=?,cylinders=?,doors=?,driver_type=?,engine_size=?,fuel=?,highwaympg=?,mileage=?,seats=?,transmission=? where id=?
2025-05-27 22:59:30 -  Delete (0): delete from car_specifications where id=?
2025-05-27 22:59:30 - Created new SQL alias : r1_0
2025-05-27 22:59:30 - Registration of TableGroup [CollectionTableGroup(com.data.entity.UserEntity.roles)] with identifierForTableGroup [com.data.entity.UserEntity.roles] for NavigablePath [com.data.entity.UserEntity.roles]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5620470a] with identifierForTableGroup [com.data.entity.UserEntity.roles.{element}] for NavigablePath [com.data.entity.UserEntity.roles.{element}]
2025-05-27 22:59:30 - Created new SQL alias : r1_1
2025-05-27 22:59:30 - DomainResult Graph:
 \-CollectionDomainResult [com.data.entity.UserEntity.roles]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (r1 : com.data.entity.UserEntity.roles) {
          primaryTableReference : user_roles as r1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : com.data.entity.UserEntity.roles.{element}) {
              primaryTableReference : roles as r1_1
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for collection: com.data.entity.UserEntity.roles
2025-05-27 22:59:30 -  Row insert: insert into user_roles (user_id,role_id) values (?,?)
2025-05-27 22:59:30 -  Row delete: delete from user_roles where user_id=? and role_id=?
2025-05-27 22:59:30 -  One-shot delete: delete from user_roles where user_id=?
2025-05-27 22:59:30 - Created new SQL alias : c1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3e3d8e6c] with identifierForTableGroup [com.data.entity.VendorEntity.cars] for NavigablePath [com.data.entity.VendorEntity.cars]
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.VendorEntity.cars.{element})] with identifierForTableGroup [com.data.entity.VendorEntity.cars.{element}] for NavigablePath [com.data.entity.VendorEntity.cars.{element}]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7fd3197b] with identifierForTableGroup [com.data.entity.VendorEntity.cars.{element}.vendor] for NavigablePath [com.data.entity.VendorEntity.cars.{element}.vendor]
2025-05-27 22:59:30 - DomainResult Graph:
 \-CollectionDomainResult [com.data.entity.VendorEntity.cars]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (c1 : com.data.entity.VendorEntity.cars) {
          primaryTableReference : cars as c1_0
          TableGroupJoins {
            left  join LazyTableGroup (v1 : com.data.entity.VendorEntity.cars.{element}.vendor) {
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for collection: com.data.entity.VendorEntity.cars
2025-05-27 22:59:30 - Created new SQL alias : p1_0
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@156d7556] with identifierForTableGroup [com.data.entity.VendorEntity.payments] for NavigablePath [com.data.entity.VendorEntity.payments]
2025-05-27 22:59:30 - Registration of TableGroup [StandardTableGroup(com.data.entity.VendorEntity.payments.{element})] with identifierForTableGroup [com.data.entity.VendorEntity.payments.{element}] for NavigablePath [com.data.entity.VendorEntity.payments.{element}]
2025-05-27 22:59:30 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@531bfe4b] with identifierForTableGroup [com.data.entity.VendorEntity.payments.{element}.vendor] for NavigablePath [com.data.entity.VendorEntity.payments.{element}.vendor]
2025-05-27 22:59:30 - DomainResult Graph:
 \-CollectionDomainResult [com.data.entity.VendorEntity.payments]

2025-05-27 22:59:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (p1 : com.data.entity.VendorEntity.payments) {
          primaryTableReference : payments as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (v1 : com.data.entity.VendorEntity.payments.{element}.vendor) {
            }
          }
        }
      }
    }

2025-05-27 22:59:30 - Static SQL for collection: com.data.entity.VendorEntity.payments
2025-05-27 22:59:30 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-27 22:59:30 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e000a17] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@54d116d5]
2025-05-27 22:59:30 - Checking 0 named HQL queries
2025-05-27 22:59:30 - Checking 0 named SQL queries
2025-05-27 22:59:30 - No alter strings for table : admins
2025-05-27 22:59:30 - No alter strings for table : appointments
2025-05-27 22:59:30 - No alter strings for table : car_address
2025-05-27 22:59:30 - No alter strings for table : car_features
2025-05-27 22:59:30 - No alter strings for table : car_media
2025-05-27 22:59:30 - No alter strings for table : car_specifications
2025-05-27 22:59:30 - No alter strings for table : cars
2025-05-27 22:59:30 - No alter strings for table : commissions
2025-05-27 22:59:30 - No alter strings for table : contact_us
2025-05-27 22:59:30 - No alter strings for table : make_offer
2025-05-27 22:59:30 - No alter strings for table : payments
2025-05-27 22:59:30 - No alter strings for table : purchased_cars
2025-05-27 22:59:30 - No alter strings for table : roles
2025-05-27 22:59:30 - No alter strings for table : test_drive
2025-05-27 22:59:30 - No alter strings for table : user_history
2025-05-27 22:59:30 - No alter strings for table : user_roles
2025-05-27 22:59:30 - No alter strings for table : users
2025-05-27 22:59:30 - No alter strings for table : vendors
2025-05-27 22:59:30 - No alter strings for table : wishlist
2025-05-27 22:59:30 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@339b45f8
2025-05-27 22:59:30 - Registering SessionFactory: 1bd5f868-68d0-4c06-bfa0-0ea71a883167 (<unnamed>)
2025-05-27 22:59:30 - Not binding SessionFactory to JNDI, no JNDI name configured
2025-05-27 22:59:30 - Instantiated SessionFactory
2025-05-27 22:59:30 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-27 22:59:30 - Statistics initialized [enabled=false]
2025-05-27 22:59:31 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:31 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:31 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:31 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:31 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:31 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:31 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:31 - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-27 22:59:32 - HQL : SELECT new com.data.pojo.response.CarDTO(c.id, c.title, c.make, c.model, c.type, c.year, c.condition, c.stockNumber, c.vinNumber, c.regularPrice, c.salePrice, c.requestPrice) FROM CarEntity c
2025-05-27 22:59:33 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:33 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:33 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:33 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [dynamic-instantiation (class com.data.pojo.response.CarDTO)]
              -> [arguments]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).id`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).title`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).make`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).model`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).type`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).year`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).condition`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).stockNumber`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).vinNumber`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).regularPrice`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).salePrice`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).requestPrice`
                <- [argument (null)]
              <- [arguments]
            <- [dynamic-instantiation (class com.data.pojo.response.CarDTO)]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.CarEntity(c)`
          <- [root] - `com.data.entity.CarEntity(c)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:33 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:33 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:33 - HQL : SELECT DISTINCT c.type FROM CarEntity c
2025-05-27 22:59:33 - Encountered use of reserved word as identifier : FROM
2025-05-27 22:59:33 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select(distinct)]
          -> [selection]
            -> [basic-path] - `com.data.entity.CarEntity(c).type`
          <- [selection]
        <- [select(distinct)]
        -> [from]
          -> [root] - `com.data.entity.CarEntity(c)`
          <- [root] - `com.data.entity.CarEntity(c)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:33 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:33 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:33 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:33 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:33 - HQL : SELECT c FROM CarEntity c WHERE LOWER(c.model) LIKE LOWER(CONCAT('%', :keyword, '%')) OR LOWER(c.make) LIKE LOWER(CONCAT('%', :keyword, '%')) OR LOWER(c.title) LIKE LOWER(CONCAT('%', :keyword, '%'))
2025-05-27 22:59:34 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.data.entity.CarEntity(c)`
            <- [root] - `com.data.entity.CarEntity(c)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.CarEntity(c)`
          <- [root] - `com.data.entity.CarEntity(c)`
        <- [from]
        -> [where]
          -> [or]
            -> [is-like]
            <- [is-like]
            -> [is-like]
            <- [is-like]
            -> [is-like]
            <- [is-like]
          <- [or]
        <- [where]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - HQL : SELECT DISTINCT c.make FROM CarEntity c
2025-05-27 22:59:34 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select(distinct)]
          -> [selection]
            -> [basic-path] - `com.data.entity.CarEntity(c).make`
          <- [selection]
        <- [select(distinct)]
        -> [from]
          -> [root] - `com.data.entity.CarEntity(c)`
          <- [root] - `com.data.entity.CarEntity(c)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - HQL : SELECT SUM(c.salePrice) FROM CarEntity c WHERE c.status = 'SOLD'
2025-05-27 22:59:34 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.CarEntity(c)`
          <- [root] - `com.data.entity.CarEntity(c)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.data.entity.CarEntity(c).status`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - HQL : SELECT c.model FROM CarEntity c WHERE c.status = 'SOLD' GROUP BY c.model ORDER BY COUNT(c.id) DESC LIMIT 1
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : (
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : )
2025-05-27 22:59:34 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [basic-path] - `com.data.entity.CarEntity(c).model`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.CarEntity(c)`
          <- [root] - `com.data.entity.CarEntity(c)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.data.entity.CarEntity(c).status`
          <- [EQUAL]
        <- [where]
        -> [group-by]
          -> [basic-path] - `com.data.entity.CarEntity(c).model`
        <- [group-by]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - HQL : SELECT new com.data.pojo.response.CarBasicDTO(c.id, c.title, c.make, c.model, c.type, c.year, c.condition, c.stockNumber, c.vinNumber, c.regularPrice, c.salePrice, c.requestPrice, c.description, c.priceLabel, c.createTime, c.updateTime, new com.data.pojo.response.CarMediaDTO(CASE WHEN m.photo1 IS NOT NULL THEN CONCAT('/api/cars/media/', c.id, '/photo1') ELSE null END, CASE WHEN m.photo2 IS NOT NULL THEN CONCAT('/api/cars/media/', c.id, '/photo2') ELSE null END, CASE WHEN m.photo3 IS NOT NULL THEN CONCAT('/api/cars/media/', c.id, '/photo3') ELSE null END, CASE WHEN m.photo4 IS NOT NULL THEN CONCAT('/api/cars/media/', c.id, '/photo4') ELSE null END, CASE WHEN m.photo5 IS NOT NULL THEN CONCAT('/api/cars/media/', c.id, '/photo5') ELSE null END, m.videoUrl, CASE WHEN m.vinReport IS NOT NULL THEN CONCAT('/api/cars/media/', c.id, '/vinReport') ELSE null END)) FROM CarEntity c LEFT JOIN c.media m WHERE c.type = :type ORDER BY c.createTime DESC
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ,
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : =
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ORDER
2025-05-27 22:59:34 - Applying inferable type to SqmExpression [org.hibernate.query.sqm.tree.expression.SqmCaseSearched@3460165f] : null -> basicType@8(java.lang.String,12)
2025-05-27 22:59:34 - Applying inferable type to SqmExpression [org.hibernate.query.sqm.tree.expression.SqmCaseSearched@2b5f49de] : null -> basicType@8(java.lang.String,12)
2025-05-27 22:59:34 - Applying inferable type to SqmExpression [org.hibernate.query.sqm.tree.expression.SqmCaseSearched@749e4d40] : null -> basicType@8(java.lang.String,12)
2025-05-27 22:59:34 - Applying inferable type to SqmExpression [org.hibernate.query.sqm.tree.expression.SqmCaseSearched@2e884ee5] : null -> basicType@8(java.lang.String,12)
2025-05-27 22:59:34 - Applying inferable type to SqmExpression [org.hibernate.query.sqm.tree.expression.SqmCaseSearched@7b274a1c] : null -> basicType@8(java.lang.String,12)
2025-05-27 22:59:34 - Applying inferable type to SqmExpression [org.hibernate.query.sqm.tree.expression.SqmCaseSearched@2a67ed1f] : null -> basicType@8(java.lang.String,12)
2025-05-27 22:59:34 - Applying inferable type to SqmExpression [SqmNamedParameter(type)] : null -> SqmBasicValuedSimplePath(com.data.entity.CarEntity(c).type)
2025-05-27 22:59:34 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [dynamic-instantiation (class com.data.pojo.response.CarBasicDTO)]
              -> [arguments]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).id`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).title`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).make`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).model`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).type`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).year`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).condition`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).stockNumber`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).vinNumber`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).regularPrice`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).salePrice`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).requestPrice`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).description`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).priceLabel`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).createTime`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.data.entity.CarEntity(c).updateTime`
                <- [argument (null)]
                -> [argument (null)]
                    -> [dynamic-instantiation (class com.data.pojo.response.CarMediaDTO)]
                      -> [arguments]
                        -> [argument (null)]
                        <- [argument (null)]
                        -> [argument (null)]
                        <- [argument (null)]
                        -> [argument (null)]
                        <- [argument (null)]
                        -> [argument (null)]
                        <- [argument (null)]
                        -> [argument (null)]
                        <- [argument (null)]
                        -> [argument (null)]
                            -> [basic-path] - `com.data.entity.CarEntity(c).media(m).videoUrl`
                        <- [argument (null)]
                        -> [argument (null)]
                        <- [argument (null)]
                      <- [arguments]
                    <- [dynamic-instantiation (class com.data.pojo.response.CarMediaDTO)]
                <- [argument (null)]
              <- [arguments]
            <- [dynamic-instantiation (class com.data.pojo.response.CarBasicDTO)]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.CarEntity(c)`
            -> [joins]
              -> [attribute] - `com.data.entity.CarEntity(c).media(m)`
                  [fetched = false]
              <- [attribute] - `com.data.entity.CarEntity(c).media(m)`
            <- [joins]
          <- [root] - `com.data.entity.CarEntity(c)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.data.entity.CarEntity(c).type`
              :type
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:34 - HQL : SELECT c FROM CarEntity c LEFT JOIN WishlistEntity w ON c.id = w.car.id GROUP BY c.id ORDER BY COUNT(w.id) DESC
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : =
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : GROUP
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : ORDER
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : (
2025-05-27 22:59:34 - Encountered use of reserved word as identifier : )
2025-05-27 22:59:34 - Unable to resolve unqualified attribute [WishlistEntity] in local from-clause
2025-05-27 22:59:34 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.data.entity.CarEntity(c)`
              -> [joins]
                -> [entity] - `com.data.entity.WishlistEntity(w)`
                  -> [on]
                    -> [EQUAL]
                        -> [basic-path] - `com.data.entity.CarEntity(c).id`
                        -> [basic-path] - `com.data.entity.WishlistEntity(w).car.id`
                    <- [EQUAL]
                  <- [on]
                <- [entity] - `com.data.entity.WishlistEntity(w)`
              <- [joins]
            <- [root] - `com.data.entity.CarEntity(c)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.CarEntity(c)`
            -> [joins]
              -> [entity] - `com.data.entity.WishlistEntity(w)`
                -> [on]
                  -> [EQUAL]
                      -> [basic-path] - `com.data.entity.CarEntity(c).id`
                      -> [basic-path] - `com.data.entity.WishlistEntity(w).car.id`
                  <- [EQUAL]
                <- [on]
              <- [entity] - `com.data.entity.WishlistEntity(w)`
            <- [joins]
          <- [root] - `com.data.entity.CarEntity(c)`
        <- [from]
        -> [group-by]
          -> [basic-path] - `com.data.entity.CarEntity(c).id`
        <- [group-by]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:34 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - HQL : SELECT s FROM CarSpecificationsEntity s WHERE s.car.id = :carId
2025-05-27 22:59:35 - Encountered use of reserved word as identifier : =
2025-05-27 22:59:35 - Applying inferable type to SqmExpression [SqmNamedParameter(carId)] : null -> SqmBasicValuedSimplePath(com.data.entity.CarSpecificationsEntity(s).car.id)
2025-05-27 22:59:35 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.data.entity.CarSpecificationsEntity(s)`
            <- [root] - `com.data.entity.CarSpecificationsEntity(s)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.CarSpecificationsEntity(s)`
          <- [root] - `com.data.entity.CarSpecificationsEntity(s)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.data.entity.CarSpecificationsEntity(s).car.id`
              :carId
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - HQL : SELECT f FROM CarFeaturesEntity f WHERE f.car.id = :carId
2025-05-27 22:59:35 - Encountered use of reserved word as identifier : =
2025-05-27 22:59:35 - Applying inferable type to SqmExpression [SqmNamedParameter(carId)] : null -> SqmBasicValuedSimplePath(com.data.entity.CarFeaturesEntity(f).car.id)
2025-05-27 22:59:35 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.data.entity.CarFeaturesEntity(f)`
            <- [root] - `com.data.entity.CarFeaturesEntity(f)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.CarFeaturesEntity(f)`
          <- [root] - `com.data.entity.CarFeaturesEntity(f)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.data.entity.CarFeaturesEntity(f).car.id`
              :carId
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - HQL : SELECT m FROM CarMediaEntity m WHERE m.car.id = :carId
2025-05-27 22:59:35 - Encountered use of reserved word as identifier : =
2025-05-27 22:59:35 - Applying inferable type to SqmExpression [SqmNamedParameter(carId)] : null -> SqmBasicValuedSimplePath(com.data.entity.CarMediaEntity(m).car.id)
2025-05-27 22:59:35 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.data.entity.CarMediaEntity(m)`
            <- [root] - `com.data.entity.CarMediaEntity(m)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.CarMediaEntity(m)`
          <- [root] - `com.data.entity.CarMediaEntity(m)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.data.entity.CarMediaEntity(m).car.id`
              :carId
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - HQL : SELECT a FROM CarAddressEntity a WHERE a.car.id = :carId
2025-05-27 22:59:35 - Encountered use of reserved word as identifier : =
2025-05-27 22:59:35 - Applying inferable type to SqmExpression [SqmNamedParameter(carId)] : null -> SqmBasicValuedSimplePath(com.data.entity.CarAddressEntity(a).car.id)
2025-05-27 22:59:35 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.data.entity.CarAddressEntity(a)`
            <- [root] - `com.data.entity.CarAddressEntity(a)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.CarAddressEntity(a)`
          <- [root] - `com.data.entity.CarAddressEntity(a)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.data.entity.CarAddressEntity(a).car.id`
              :carId
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - HQL : SELECT COUNT(o.id) FROM MakeOfferEntity o
2025-05-27 22:59:35 - Encountered use of reserved word as identifier : (
2025-05-27 22:59:35 - Encountered use of reserved word as identifier : )
2025-05-27 22:59:35 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.MakeOfferEntity(o)`
          <- [root] - `com.data.entity.MakeOfferEntity(o)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - HQL : SELECT COUNT(t.id) FROM TestDriveEntity t
2025-05-27 22:59:35 - Encountered use of reserved word as identifier : (
2025-05-27 22:59:35 - Encountered use of reserved word as identifier : )
2025-05-27 22:59:35 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.TestDriveEntity(t)`
          <- [root] - `com.data.entity.TestDriveEntity(t)`
        <- [from]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - HQL : SELECT v.tradeLicenseNumber FROM VendorEntity v JOIN v.cars c WHERE c.status = 'SOLD' GROUP BY v.tradeLicenseNumber ORDER BY COUNT(c.id) DESC LIMIT 1
2025-05-27 22:59:35 - Encountered use of reserved word as identifier : (
2025-05-27 22:59:35 - Encountered use of reserved word as identifier : )
2025-05-27 22:59:35 - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [basic-path] - `com.data.entity.VendorEntity(v).tradeLicenseNumber`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.data.entity.VendorEntity(v)`
            -> [joins]
              -> [attribute] - `com.data.entity.VendorEntity(v).cars(c)`
                  [fetched = false]
              <- [attribute] - `com.data.entity.VendorEntity(v).cars(c)`
            <- [joins]
          <- [root] - `com.data.entity.VendorEntity(v)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.data.entity.VendorEntity(v).cars(c).{element}.status`
          <- [EQUAL]
        <- [where]
        -> [group-by]
          -> [basic-path] - `com.data.entity.VendorEntity(v).tradeLicenseNumber`
        <- [group-by]
      <- [query-spec]
    <- [select]

2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:35 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1377)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:36 - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-05-27 22:59:36 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:36 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:37 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy142.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:440)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1573)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:146)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.data.CarSellApplication.main(CarSellApplication.java:10)
2025-05-27 22:59:55 - Loaded expression factory via original TCCL
2025-05-27 22:59:55 - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-05-27 22:59:55 - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-05-27 22:59:55 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-27 22:59:55 - Trying to load META-INF/validation.xml via user class loader
2025-05-27 22:59:55 - Trying to load META-INF/validation.xml via TCCL
2025-05-27 22:59:55 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-27 22:59:55 - No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-27 22:59:55 - Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-27 22:59:55 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-27 22:59:55 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-27 22:59:55 - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-27 22:59:55 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-27 22:59:55 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-27 22:59:55 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-27 22:59:55 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-27 23:00:04 - Tomcat started on port 8181 (http) with context path '/'
2025-05-27 23:00:04 - Started CarSellApplication in 48.411 seconds (process running for 49.888)
2025-05-27 23:00:40 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-27 23:00:41 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-27 23:00:41 - begin
2025-05-27 23:00:45 - Created new SQL alias : r1_0
2025-05-27 23:00:45 - Registration of TableGroup [StandardTableGroup(com.data.entity.Role(68))] with identifierForTableGroup [com.data.entity.Role] for NavigablePath [com.data.entity.Role]
2025-05-27 23:00:45 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6a790e1
2025-05-27 23:00:45 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.data.entity.Role(68).name)
2025-05-27 23:00:45 - DomainResult Graph:
 \-EntityResultImpl [com.data.entity.Role(68)]
 |  \-BasicFetch [com.data.entity.Role(68).name]

2025-05-27 23:00:45 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : com.data.entity.Role(68)) {
          primaryTableReference : roles as r1_0
        }
      }
    }

2025-05-27 23:00:46 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2025-05-27 23:00:46 - Initializer list:
	  com.data.entity.Role(68) -> EntityJoinedFetchInitializer(com.data.entity.Role(68))@632085742 (SingleTableEntityPersister(com.data.entity.Role))

2025-05-27 23:00:46 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-27 23:00:46 - Executing identity-insert immediately
2025-05-27 23:00:46 - Initializer list is empty
2025-05-27 23:00:46 - Extracted generated values [com.data.entity.UserEntity]: [Ljava.lang.Object;@4cd3b106
2025-05-27 23:00:46 - Processing flush-time cascades
2025-05-27 23:00:46 - Dirty checking collections
2025-05-27 23:00:46 - Collection found: [com.data.entity.UserEntity.roles#24], was: [<unreferenced>] (initialized)
2025-05-27 23:00:46 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2025-05-27 23:00:46 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2025-05-27 23:00:46 - Listing entities:
2025-05-27 23:00:46 - com.data.entity.Role{name=VENDOR, id=2}
2025-05-27 23:00:46 - com.data.entity.UserEntity{lastName=bhao, address=string, roles=[com.data.entity.Role#2], updateTime=2025-05-27 23:00:46.289, tempPasswordExpiry=null, enabled=false, firstName=vendorbhai1, password=$2a$10$1fdbfAacOGZJyZvuSWtrceN/7sjziwLSYN1IEopuZsbw4.nQZdAsi, phoneNumber=9123191234, createTime=2025-05-27 23:00:46.289, dob=Tue May 27 22:44:23 IST 2025, id=24, email=bhai1@gmail.com}
2025-05-27 23:00:47 - Inserting collection rows - com.data.entity.UserEntity.roles : 24
2025-05-27 23:00:47 - Done inserting `1` collection rows : com.data.entity.UserEntity.roles
User saved: 24
2025-05-27 23:00:47 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-27 23:00:47 - Executing identity-insert immediately
2025-05-27 23:00:47 - Initializer list is empty
2025-05-27 23:00:47 - Extracted generated values [com.data.entity.VendorEntity]: [Ljava.lang.Object;@38594663
2025-05-27 23:00:47 - Processing flush-time cascades
2025-05-27 23:00:47 - Dirty checking collections
2025-05-27 23:00:47 - Collection found: [com.data.entity.UserEntity.roles#24], was: [com.data.entity.UserEntity.roles#24] (initialized)
2025-05-27 23:00:47 - Collection found: [com.data.entity.VendorEntity.payments#9], was: [<unreferenced>] (initialized)
2025-05-27 23:00:47 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-05-27 23:00:47 - Flushed: 1 (re)creations, 0 updates, 0 removals to 2 collections
2025-05-27 23:00:47 - Listing entities:
2025-05-27 23:00:47 - com.data.entity.Role{name=VENDOR, id=2}
2025-05-27 23:00:47 - com.data.entity.VendorEntity{cars=null, createTime=2025-05-27 23:00:47.049, payments=[], updateTime=2025-05-27 23:00:47.049, id=9, user=com.data.entity.UserEntity#24, enabled=false, tradeLicenseNumber=ygyhj}
2025-05-27 23:00:47 - com.data.entity.UserEntity{lastName=bhao, address=string, roles=[com.data.entity.Role#2], updateTime=2025-05-27 23:00:46.289, tempPasswordExpiry=null, enabled=false, firstName=vendorbhai1, password=$2a$10$1fdbfAacOGZJyZvuSWtrceN/7sjziwLSYN1IEopuZsbw4.nQZdAsi, phoneNumber=9123191234, createTime=2025-05-27 23:00:46.289, dob=Tue May 27 22:44:23 IST 2025, id=24, email=bhai1@gmail.com}
9
2025-05-27 23:00:47 - committing
2025-05-27 23:00:47 - Processing flush-time cascades
2025-05-27 23:00:47 - Dirty checking collections
2025-05-27 23:00:47 - Collection found: [com.data.entity.UserEntity.roles#24], was: [com.data.entity.UserEntity.roles#24] (initialized)
2025-05-27 23:00:47 - Collection found: [com.data.entity.VendorEntity.payments#9], was: [com.data.entity.VendorEntity.payments#9] (initialized)
2025-05-27 23:00:47 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2025-05-27 23:00:47 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2025-05-27 23:00:47 - Listing entities:
2025-05-27 23:00:47 - com.data.entity.Role{name=VENDOR, id=2}
2025-05-27 23:00:47 - com.data.entity.VendorEntity{cars=null, createTime=2025-05-27 23:00:47.049, payments=[], updateTime=2025-05-27 23:00:47.049, id=9, user=com.data.entity.UserEntity#24, enabled=false, tradeLicenseNumber=ygyhj}
2025-05-27 23:00:47 - com.data.entity.UserEntity{lastName=bhao, address=string, roles=[com.data.entity.Role#2], updateTime=2025-05-27 23:00:46.289, tempPasswordExpiry=null, enabled=false, firstName=vendorbhai1, password=$2a$10$1fdbfAacOGZJyZvuSWtrceN/7sjziwLSYN1IEopuZsbw4.nQZdAsi, phoneNumber=9123191234, createTime=2025-05-27 23:00:46.289, dob=Tue May 27 22:44:23 IST 2025, id=24, email=bhai1@gmail.com}
